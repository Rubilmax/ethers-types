/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export declare namespace CometConfiguration {
  export type AssetConfigStruct = {
    asset: AddressLike;
    priceFeed: AddressLike;
    decimals: BigNumberish;
    borrowCollateralFactor: BigNumberish;
    liquidateCollateralFactor: BigNumberish;
    liquidationFactor: BigNumberish;
    supplyCap: BigNumberish;
  };

  export type AssetConfigStructOutput = [
    asset: string,
    priceFeed: string,
    decimals: bigint,
    borrowCollateralFactor: bigint,
    liquidateCollateralFactor: bigint,
    liquidationFactor: bigint,
    supplyCap: bigint
  ] & {
    asset: string;
    priceFeed: string;
    decimals: bigint;
    borrowCollateralFactor: bigint;
    liquidateCollateralFactor: bigint;
    liquidationFactor: bigint;
    supplyCap: bigint;
  };

  export type ConfigurationStruct = {
    governor: AddressLike;
    pauseGuardian: AddressLike;
    baseToken: AddressLike;
    baseTokenPriceFeed: AddressLike;
    extensionDelegate: AddressLike;
    supplyKink: BigNumberish;
    supplyPerYearInterestRateSlopeLow: BigNumberish;
    supplyPerYearInterestRateSlopeHigh: BigNumberish;
    supplyPerYearInterestRateBase: BigNumberish;
    borrowKink: BigNumberish;
    borrowPerYearInterestRateSlopeLow: BigNumberish;
    borrowPerYearInterestRateSlopeHigh: BigNumberish;
    borrowPerYearInterestRateBase: BigNumberish;
    storeFrontPriceFactor: BigNumberish;
    trackingIndexScale: BigNumberish;
    baseTrackingSupplySpeed: BigNumberish;
    baseTrackingBorrowSpeed: BigNumberish;
    baseMinForRewards: BigNumberish;
    baseBorrowMin: BigNumberish;
    targetReserves: BigNumberish;
    assetConfigs: CometConfiguration.AssetConfigStruct[];
  };

  export type ConfigurationStructOutput = [
    governor: string,
    pauseGuardian: string,
    baseToken: string,
    baseTokenPriceFeed: string,
    extensionDelegate: string,
    supplyKink: bigint,
    supplyPerYearInterestRateSlopeLow: bigint,
    supplyPerYearInterestRateSlopeHigh: bigint,
    supplyPerYearInterestRateBase: bigint,
    borrowKink: bigint,
    borrowPerYearInterestRateSlopeLow: bigint,
    borrowPerYearInterestRateSlopeHigh: bigint,
    borrowPerYearInterestRateBase: bigint,
    storeFrontPriceFactor: bigint,
    trackingIndexScale: bigint,
    baseTrackingSupplySpeed: bigint,
    baseTrackingBorrowSpeed: bigint,
    baseMinForRewards: bigint,
    baseBorrowMin: bigint,
    targetReserves: bigint,
    assetConfigs: CometConfiguration.AssetConfigStructOutput[]
  ] & {
    governor: string;
    pauseGuardian: string;
    baseToken: string;
    baseTokenPriceFeed: string;
    extensionDelegate: string;
    supplyKink: bigint;
    supplyPerYearInterestRateSlopeLow: bigint;
    supplyPerYearInterestRateSlopeHigh: bigint;
    supplyPerYearInterestRateBase: bigint;
    borrowKink: bigint;
    borrowPerYearInterestRateSlopeLow: bigint;
    borrowPerYearInterestRateSlopeHigh: bigint;
    borrowPerYearInterestRateBase: bigint;
    storeFrontPriceFactor: bigint;
    trackingIndexScale: bigint;
    baseTrackingSupplySpeed: bigint;
    baseTrackingBorrowSpeed: bigint;
    baseMinForRewards: bigint;
    baseBorrowMin: bigint;
    targetReserves: bigint;
    assetConfigs: CometConfiguration.AssetConfigStructOutput[];
  };
}

export interface ConfiguratorInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "addAsset"
      | "deploy"
      | "factory"
      | "getAssetIndex"
      | "getConfiguration"
      | "governor"
      | "initialize"
      | "setBaseBorrowMin"
      | "setBaseMinForRewards"
      | "setBaseTokenPriceFeed"
      | "setBaseTrackingBorrowSpeed"
      | "setBaseTrackingSupplySpeed"
      | "setBorrowKink"
      | "setBorrowPerYearInterestRateBase"
      | "setBorrowPerYearInterestRateSlopeHigh"
      | "setBorrowPerYearInterestRateSlopeLow"
      | "setConfiguration"
      | "setExtensionDelegate"
      | "setFactory"
      | "setGovernor"
      | "setPauseGuardian"
      | "setStoreFrontPriceFactor"
      | "setSupplyKink"
      | "setSupplyPerYearInterestRateBase"
      | "setSupplyPerYearInterestRateSlopeHigh"
      | "setSupplyPerYearInterestRateSlopeLow"
      | "setTargetReserves"
      | "transferGovernor"
      | "updateAsset"
      | "updateAssetBorrowCollateralFactor"
      | "updateAssetLiquidateCollateralFactor"
      | "updateAssetLiquidationFactor"
      | "updateAssetPriceFeed"
      | "updateAssetSupplyCap"
      | "version"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "AddAsset"
      | "CometDeployed"
      | "GovernorTransferred"
      | "SetBaseBorrowMin"
      | "SetBaseMinForRewards"
      | "SetBaseTokenPriceFeed"
      | "SetBaseTrackingBorrowSpeed"
      | "SetBaseTrackingSupplySpeed"
      | "SetBorrowKink"
      | "SetBorrowPerYearInterestRateBase"
      | "SetBorrowPerYearInterestRateSlopeHigh"
      | "SetBorrowPerYearInterestRateSlopeLow"
      | "SetConfiguration"
      | "SetExtensionDelegate"
      | "SetFactory"
      | "SetGovernor"
      | "SetPauseGuardian"
      | "SetStoreFrontPriceFactor"
      | "SetSupplyKink"
      | "SetSupplyPerYearInterestRateBase"
      | "SetSupplyPerYearInterestRateSlopeHigh"
      | "SetSupplyPerYearInterestRateSlopeLow"
      | "SetTargetReserves"
      | "UpdateAsset"
      | "UpdateAssetBorrowCollateralFactor"
      | "UpdateAssetLiquidateCollateralFactor"
      | "UpdateAssetLiquidationFactor"
      | "UpdateAssetPriceFeed"
      | "UpdateAssetSupplyCap"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "addAsset",
    values: [AddressLike, CometConfiguration.AssetConfigStruct]
  ): string;
  encodeFunctionData(functionFragment: "deploy", values: [AddressLike]): string;
  encodeFunctionData(
    functionFragment: "factory",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getAssetIndex",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getConfiguration",
    values: [AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "governor", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setBaseBorrowMin",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBaseMinForRewards",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBaseTokenPriceFeed",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setBaseTrackingBorrowSpeed",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBaseTrackingSupplySpeed",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBorrowKink",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBorrowPerYearInterestRateBase",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBorrowPerYearInterestRateSlopeHigh",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBorrowPerYearInterestRateSlopeLow",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setConfiguration",
    values: [AddressLike, CometConfiguration.ConfigurationStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setExtensionDelegate",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setFactory",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setGovernor",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setPauseGuardian",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setStoreFrontPriceFactor",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setSupplyKink",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setSupplyPerYearInterestRateBase",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setSupplyPerYearInterestRateSlopeHigh",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setSupplyPerYearInterestRateSlopeLow",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setTargetReserves",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferGovernor",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAsset",
    values: [AddressLike, CometConfiguration.AssetConfigStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAssetBorrowCollateralFactor",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAssetLiquidateCollateralFactor",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAssetLiquidationFactor",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAssetPriceFeed",
    values: [AddressLike, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAssetSupplyCap",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "version", values?: undefined): string;

  decodeFunctionResult(functionFragment: "addAsset", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "deploy", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "factory", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAssetIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "governor", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setBaseBorrowMin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBaseMinForRewards",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBaseTokenPriceFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBaseTrackingBorrowSpeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBaseTrackingSupplySpeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBorrowKink",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBorrowPerYearInterestRateBase",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBorrowPerYearInterestRateSlopeHigh",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBorrowPerYearInterestRateSlopeLow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setExtensionDelegate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setFactory", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setGovernor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPauseGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setStoreFrontPriceFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSupplyKink",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSupplyPerYearInterestRateBase",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSupplyPerYearInterestRateSlopeHigh",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSupplyPerYearInterestRateSlopeLow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTargetReserves",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferGovernor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAssetBorrowCollateralFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAssetLiquidateCollateralFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAssetLiquidationFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAssetPriceFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAssetSupplyCap",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "version", data: BytesLike): Result;
}

export namespace AddAssetEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    assetConfig: CometConfiguration.AssetConfigStruct
  ];
  export type OutputTuple = [
    cometProxy: string,
    assetConfig: CometConfiguration.AssetConfigStructOutput
  ];
  export interface OutputObject {
    cometProxy: string;
    assetConfig: CometConfiguration.AssetConfigStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CometDeployedEvent {
  export type InputTuple = [cometProxy: AddressLike, newComet: AddressLike];
  export type OutputTuple = [cometProxy: string, newComet: string];
  export interface OutputObject {
    cometProxy: string;
    newComet: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GovernorTransferredEvent {
  export type InputTuple = [oldGovernor: AddressLike, newGovernor: AddressLike];
  export type OutputTuple = [oldGovernor: string, newGovernor: string];
  export interface OutputObject {
    oldGovernor: string;
    newGovernor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetBaseBorrowMinEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldBaseBorrowMin: BigNumberish,
    newBaseBorrowMin: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldBaseBorrowMin: bigint,
    newBaseBorrowMin: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldBaseBorrowMin: bigint;
    newBaseBorrowMin: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetBaseMinForRewardsEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldBaseMinForRewards: BigNumberish,
    newBaseMinForRewards: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldBaseMinForRewards: bigint,
    newBaseMinForRewards: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldBaseMinForRewards: bigint;
    newBaseMinForRewards: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetBaseTokenPriceFeedEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldBaseTokenPriceFeed: AddressLike,
    newBaseTokenPriceFeed: AddressLike
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldBaseTokenPriceFeed: string,
    newBaseTokenPriceFeed: string
  ];
  export interface OutputObject {
    cometProxy: string;
    oldBaseTokenPriceFeed: string;
    newBaseTokenPriceFeed: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetBaseTrackingBorrowSpeedEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldBaseTrackingBorrowSpeed: BigNumberish,
    newBaseTrackingBorrowSpeed: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldBaseTrackingBorrowSpeed: bigint,
    newBaseTrackingBorrowSpeed: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldBaseTrackingBorrowSpeed: bigint;
    newBaseTrackingBorrowSpeed: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetBaseTrackingSupplySpeedEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldBaseTrackingSupplySpeed: BigNumberish,
    newBaseTrackingSupplySpeed: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldBaseTrackingSupplySpeed: bigint,
    newBaseTrackingSupplySpeed: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldBaseTrackingSupplySpeed: bigint;
    newBaseTrackingSupplySpeed: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetBorrowKinkEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldKink: BigNumberish,
    newKink: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldKink: bigint,
    newKink: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldKink: bigint;
    newKink: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetBorrowPerYearInterestRateBaseEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldIRBase: BigNumberish,
    newIRBase: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldIRBase: bigint,
    newIRBase: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldIRBase: bigint;
    newIRBase: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetBorrowPerYearInterestRateSlopeHighEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldIRSlopeHigh: BigNumberish,
    newIRSlopeHigh: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldIRSlopeHigh: bigint,
    newIRSlopeHigh: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldIRSlopeHigh: bigint;
    newIRSlopeHigh: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetBorrowPerYearInterestRateSlopeLowEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldIRSlopeLow: BigNumberish,
    newIRSlopeLow: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldIRSlopeLow: bigint,
    newIRSlopeLow: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldIRSlopeLow: bigint;
    newIRSlopeLow: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetConfigurationEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldConfiguration: CometConfiguration.ConfigurationStruct,
    newConfiguration: CometConfiguration.ConfigurationStruct
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldConfiguration: CometConfiguration.ConfigurationStructOutput,
    newConfiguration: CometConfiguration.ConfigurationStructOutput
  ];
  export interface OutputObject {
    cometProxy: string;
    oldConfiguration: CometConfiguration.ConfigurationStructOutput;
    newConfiguration: CometConfiguration.ConfigurationStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetExtensionDelegateEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldExt: AddressLike,
    newExt: AddressLike
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldExt: string,
    newExt: string
  ];
  export interface OutputObject {
    cometProxy: string;
    oldExt: string;
    newExt: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetFactoryEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldFactory: AddressLike,
    newFactory: AddressLike
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldFactory: string,
    newFactory: string
  ];
  export interface OutputObject {
    cometProxy: string;
    oldFactory: string;
    newFactory: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetGovernorEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldGovernor: AddressLike,
    newGovernor: AddressLike
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldGovernor: string,
    newGovernor: string
  ];
  export interface OutputObject {
    cometProxy: string;
    oldGovernor: string;
    newGovernor: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetPauseGuardianEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldPauseGuardian: AddressLike,
    newPauseGuardian: AddressLike
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldPauseGuardian: string,
    newPauseGuardian: string
  ];
  export interface OutputObject {
    cometProxy: string;
    oldPauseGuardian: string;
    newPauseGuardian: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetStoreFrontPriceFactorEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldStoreFrontPriceFactor: BigNumberish,
    newStoreFrontPriceFactor: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldStoreFrontPriceFactor: bigint,
    newStoreFrontPriceFactor: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldStoreFrontPriceFactor: bigint;
    newStoreFrontPriceFactor: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetSupplyKinkEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldKink: BigNumberish,
    newKink: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldKink: bigint,
    newKink: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldKink: bigint;
    newKink: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetSupplyPerYearInterestRateBaseEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldIRBase: BigNumberish,
    newIRBase: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldIRBase: bigint,
    newIRBase: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldIRBase: bigint;
    newIRBase: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetSupplyPerYearInterestRateSlopeHighEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldIRSlopeHigh: BigNumberish,
    newIRSlopeHigh: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldIRSlopeHigh: bigint,
    newIRSlopeHigh: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldIRSlopeHigh: bigint;
    newIRSlopeHigh: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetSupplyPerYearInterestRateSlopeLowEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldIRSlopeLow: BigNumberish,
    newIRSlopeLow: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldIRSlopeLow: bigint,
    newIRSlopeLow: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldIRSlopeLow: bigint;
    newIRSlopeLow: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace SetTargetReservesEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldTargetReserves: BigNumberish,
    newTargetReserves: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldTargetReserves: bigint,
    newTargetReserves: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    oldTargetReserves: bigint;
    newTargetReserves: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpdateAssetEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    oldAssetConfig: CometConfiguration.AssetConfigStruct,
    newAssetConfig: CometConfiguration.AssetConfigStruct
  ];
  export type OutputTuple = [
    cometProxy: string,
    oldAssetConfig: CometConfiguration.AssetConfigStructOutput,
    newAssetConfig: CometConfiguration.AssetConfigStructOutput
  ];
  export interface OutputObject {
    cometProxy: string;
    oldAssetConfig: CometConfiguration.AssetConfigStructOutput;
    newAssetConfig: CometConfiguration.AssetConfigStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpdateAssetBorrowCollateralFactorEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    asset: AddressLike,
    oldBorrowCF: BigNumberish,
    newBorrowCF: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    asset: string,
    oldBorrowCF: bigint,
    newBorrowCF: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    asset: string;
    oldBorrowCF: bigint;
    newBorrowCF: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpdateAssetLiquidateCollateralFactorEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    asset: AddressLike,
    oldLiquidateCF: BigNumberish,
    newLiquidateCF: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    asset: string,
    oldLiquidateCF: bigint,
    newLiquidateCF: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    asset: string;
    oldLiquidateCF: bigint;
    newLiquidateCF: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpdateAssetLiquidationFactorEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    asset: AddressLike,
    oldLiquidationFactor: BigNumberish,
    newLiquidationFactor: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    asset: string,
    oldLiquidationFactor: bigint,
    newLiquidationFactor: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    asset: string;
    oldLiquidationFactor: bigint;
    newLiquidationFactor: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpdateAssetPriceFeedEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    asset: AddressLike,
    oldPriceFeed: AddressLike,
    newPriceFeed: AddressLike
  ];
  export type OutputTuple = [
    cometProxy: string,
    asset: string,
    oldPriceFeed: string,
    newPriceFeed: string
  ];
  export interface OutputObject {
    cometProxy: string;
    asset: string;
    oldPriceFeed: string;
    newPriceFeed: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpdateAssetSupplyCapEvent {
  export type InputTuple = [
    cometProxy: AddressLike,
    asset: AddressLike,
    oldSupplyCap: BigNumberish,
    newSupplyCap: BigNumberish
  ];
  export type OutputTuple = [
    cometProxy: string,
    asset: string,
    oldSupplyCap: bigint,
    newSupplyCap: bigint
  ];
  export interface OutputObject {
    cometProxy: string;
    asset: string;
    oldSupplyCap: bigint;
    newSupplyCap: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface Configurator extends BaseContract {
  connect(runner?: ContractRunner | null): Configurator;
  waitForDeployment(): Promise<this>;

  interface: ConfiguratorInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  addAsset: TypedContractMethod<
    [
      cometProxy: AddressLike,
      assetConfig: CometConfiguration.AssetConfigStruct
    ],
    [void],
    "nonpayable"
  >;

  deploy: TypedContractMethod<
    [cometProxy: AddressLike],
    [string],
    "nonpayable"
  >;

  factory: TypedContractMethod<[arg0: AddressLike], [string], "view">;

  getAssetIndex: TypedContractMethod<
    [cometProxy: AddressLike, asset: AddressLike],
    [bigint],
    "view"
  >;

  getConfiguration: TypedContractMethod<
    [cometProxy: AddressLike],
    [CometConfiguration.ConfigurationStructOutput],
    "view"
  >;

  governor: TypedContractMethod<[], [string], "view">;

  initialize: TypedContractMethod<
    [governor_: AddressLike],
    [void],
    "nonpayable"
  >;

  setBaseBorrowMin: TypedContractMethod<
    [cometProxy: AddressLike, newBaseBorrowMin: BigNumberish],
    [void],
    "nonpayable"
  >;

  setBaseMinForRewards: TypedContractMethod<
    [cometProxy: AddressLike, newBaseMinForRewards: BigNumberish],
    [void],
    "nonpayable"
  >;

  setBaseTokenPriceFeed: TypedContractMethod<
    [cometProxy: AddressLike, newBaseTokenPriceFeed: AddressLike],
    [void],
    "nonpayable"
  >;

  setBaseTrackingBorrowSpeed: TypedContractMethod<
    [cometProxy: AddressLike, newBaseTrackingBorrowSpeed: BigNumberish],
    [void],
    "nonpayable"
  >;

  setBaseTrackingSupplySpeed: TypedContractMethod<
    [cometProxy: AddressLike, newBaseTrackingSupplySpeed: BigNumberish],
    [void],
    "nonpayable"
  >;

  setBorrowKink: TypedContractMethod<
    [cometProxy: AddressLike, newBorrowKink: BigNumberish],
    [void],
    "nonpayable"
  >;

  setBorrowPerYearInterestRateBase: TypedContractMethod<
    [cometProxy: AddressLike, newBase: BigNumberish],
    [void],
    "nonpayable"
  >;

  setBorrowPerYearInterestRateSlopeHigh: TypedContractMethod<
    [cometProxy: AddressLike, newSlope: BigNumberish],
    [void],
    "nonpayable"
  >;

  setBorrowPerYearInterestRateSlopeLow: TypedContractMethod<
    [cometProxy: AddressLike, newSlope: BigNumberish],
    [void],
    "nonpayable"
  >;

  setConfiguration: TypedContractMethod<
    [
      cometProxy: AddressLike,
      newConfiguration: CometConfiguration.ConfigurationStruct
    ],
    [void],
    "nonpayable"
  >;

  setExtensionDelegate: TypedContractMethod<
    [cometProxy: AddressLike, newExtensionDelegate: AddressLike],
    [void],
    "nonpayable"
  >;

  setFactory: TypedContractMethod<
    [cometProxy: AddressLike, newFactory: AddressLike],
    [void],
    "nonpayable"
  >;

  setGovernor: TypedContractMethod<
    [cometProxy: AddressLike, newGovernor: AddressLike],
    [void],
    "nonpayable"
  >;

  setPauseGuardian: TypedContractMethod<
    [cometProxy: AddressLike, newPauseGuardian: AddressLike],
    [void],
    "nonpayable"
  >;

  setStoreFrontPriceFactor: TypedContractMethod<
    [cometProxy: AddressLike, newStoreFrontPriceFactor: BigNumberish],
    [void],
    "nonpayable"
  >;

  setSupplyKink: TypedContractMethod<
    [cometProxy: AddressLike, newSupplyKink: BigNumberish],
    [void],
    "nonpayable"
  >;

  setSupplyPerYearInterestRateBase: TypedContractMethod<
    [cometProxy: AddressLike, newBase: BigNumberish],
    [void],
    "nonpayable"
  >;

  setSupplyPerYearInterestRateSlopeHigh: TypedContractMethod<
    [cometProxy: AddressLike, newSlope: BigNumberish],
    [void],
    "nonpayable"
  >;

  setSupplyPerYearInterestRateSlopeLow: TypedContractMethod<
    [cometProxy: AddressLike, newSlope: BigNumberish],
    [void],
    "nonpayable"
  >;

  setTargetReserves: TypedContractMethod<
    [cometProxy: AddressLike, newTargetReserves: BigNumberish],
    [void],
    "nonpayable"
  >;

  transferGovernor: TypedContractMethod<
    [newGovernor: AddressLike],
    [void],
    "nonpayable"
  >;

  updateAsset: TypedContractMethod<
    [
      cometProxy: AddressLike,
      newAssetConfig: CometConfiguration.AssetConfigStruct
    ],
    [void],
    "nonpayable"
  >;

  updateAssetBorrowCollateralFactor: TypedContractMethod<
    [cometProxy: AddressLike, asset: AddressLike, newBorrowCF: BigNumberish],
    [void],
    "nonpayable"
  >;

  updateAssetLiquidateCollateralFactor: TypedContractMethod<
    [cometProxy: AddressLike, asset: AddressLike, newLiquidateCF: BigNumberish],
    [void],
    "nonpayable"
  >;

  updateAssetLiquidationFactor: TypedContractMethod<
    [
      cometProxy: AddressLike,
      asset: AddressLike,
      newLiquidationFactor: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  updateAssetPriceFeed: TypedContractMethod<
    [cometProxy: AddressLike, asset: AddressLike, newPriceFeed: AddressLike],
    [void],
    "nonpayable"
  >;

  updateAssetSupplyCap: TypedContractMethod<
    [cometProxy: AddressLike, asset: AddressLike, newSupplyCap: BigNumberish],
    [void],
    "nonpayable"
  >;

  version: TypedContractMethod<[], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "addAsset"
  ): TypedContractMethod<
    [
      cometProxy: AddressLike,
      assetConfig: CometConfiguration.AssetConfigStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "deploy"
  ): TypedContractMethod<[cometProxy: AddressLike], [string], "nonpayable">;
  getFunction(
    nameOrSignature: "factory"
  ): TypedContractMethod<[arg0: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "getAssetIndex"
  ): TypedContractMethod<
    [cometProxy: AddressLike, asset: AddressLike],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "getConfiguration"
  ): TypedContractMethod<
    [cometProxy: AddressLike],
    [CometConfiguration.ConfigurationStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "governor"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<[governor_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setBaseBorrowMin"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newBaseBorrowMin: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setBaseMinForRewards"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newBaseMinForRewards: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setBaseTokenPriceFeed"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newBaseTokenPriceFeed: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setBaseTrackingBorrowSpeed"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newBaseTrackingBorrowSpeed: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setBaseTrackingSupplySpeed"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newBaseTrackingSupplySpeed: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setBorrowKink"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newBorrowKink: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setBorrowPerYearInterestRateBase"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newBase: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setBorrowPerYearInterestRateSlopeHigh"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newSlope: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setBorrowPerYearInterestRateSlopeLow"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newSlope: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setConfiguration"
  ): TypedContractMethod<
    [
      cometProxy: AddressLike,
      newConfiguration: CometConfiguration.ConfigurationStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setExtensionDelegate"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newExtensionDelegate: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setFactory"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newFactory: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setGovernor"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newGovernor: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setPauseGuardian"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newPauseGuardian: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setStoreFrontPriceFactor"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newStoreFrontPriceFactor: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setSupplyKink"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newSupplyKink: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setSupplyPerYearInterestRateBase"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newBase: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setSupplyPerYearInterestRateSlopeHigh"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newSlope: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setSupplyPerYearInterestRateSlopeLow"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newSlope: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setTargetReserves"
  ): TypedContractMethod<
    [cometProxy: AddressLike, newTargetReserves: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferGovernor"
  ): TypedContractMethod<[newGovernor: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "updateAsset"
  ): TypedContractMethod<
    [
      cometProxy: AddressLike,
      newAssetConfig: CometConfiguration.AssetConfigStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateAssetBorrowCollateralFactor"
  ): TypedContractMethod<
    [cometProxy: AddressLike, asset: AddressLike, newBorrowCF: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateAssetLiquidateCollateralFactor"
  ): TypedContractMethod<
    [cometProxy: AddressLike, asset: AddressLike, newLiquidateCF: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateAssetLiquidationFactor"
  ): TypedContractMethod<
    [
      cometProxy: AddressLike,
      asset: AddressLike,
      newLiquidationFactor: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateAssetPriceFeed"
  ): TypedContractMethod<
    [cometProxy: AddressLike, asset: AddressLike, newPriceFeed: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateAssetSupplyCap"
  ): TypedContractMethod<
    [cometProxy: AddressLike, asset: AddressLike, newSupplyCap: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "version"
  ): TypedContractMethod<[], [bigint], "view">;

  getEvent(
    key: "AddAsset"
  ): TypedContractEvent<
    AddAssetEvent.InputTuple,
    AddAssetEvent.OutputTuple,
    AddAssetEvent.OutputObject
  >;
  getEvent(
    key: "CometDeployed"
  ): TypedContractEvent<
    CometDeployedEvent.InputTuple,
    CometDeployedEvent.OutputTuple,
    CometDeployedEvent.OutputObject
  >;
  getEvent(
    key: "GovernorTransferred"
  ): TypedContractEvent<
    GovernorTransferredEvent.InputTuple,
    GovernorTransferredEvent.OutputTuple,
    GovernorTransferredEvent.OutputObject
  >;
  getEvent(
    key: "SetBaseBorrowMin"
  ): TypedContractEvent<
    SetBaseBorrowMinEvent.InputTuple,
    SetBaseBorrowMinEvent.OutputTuple,
    SetBaseBorrowMinEvent.OutputObject
  >;
  getEvent(
    key: "SetBaseMinForRewards"
  ): TypedContractEvent<
    SetBaseMinForRewardsEvent.InputTuple,
    SetBaseMinForRewardsEvent.OutputTuple,
    SetBaseMinForRewardsEvent.OutputObject
  >;
  getEvent(
    key: "SetBaseTokenPriceFeed"
  ): TypedContractEvent<
    SetBaseTokenPriceFeedEvent.InputTuple,
    SetBaseTokenPriceFeedEvent.OutputTuple,
    SetBaseTokenPriceFeedEvent.OutputObject
  >;
  getEvent(
    key: "SetBaseTrackingBorrowSpeed"
  ): TypedContractEvent<
    SetBaseTrackingBorrowSpeedEvent.InputTuple,
    SetBaseTrackingBorrowSpeedEvent.OutputTuple,
    SetBaseTrackingBorrowSpeedEvent.OutputObject
  >;
  getEvent(
    key: "SetBaseTrackingSupplySpeed"
  ): TypedContractEvent<
    SetBaseTrackingSupplySpeedEvent.InputTuple,
    SetBaseTrackingSupplySpeedEvent.OutputTuple,
    SetBaseTrackingSupplySpeedEvent.OutputObject
  >;
  getEvent(
    key: "SetBorrowKink"
  ): TypedContractEvent<
    SetBorrowKinkEvent.InputTuple,
    SetBorrowKinkEvent.OutputTuple,
    SetBorrowKinkEvent.OutputObject
  >;
  getEvent(
    key: "SetBorrowPerYearInterestRateBase"
  ): TypedContractEvent<
    SetBorrowPerYearInterestRateBaseEvent.InputTuple,
    SetBorrowPerYearInterestRateBaseEvent.OutputTuple,
    SetBorrowPerYearInterestRateBaseEvent.OutputObject
  >;
  getEvent(
    key: "SetBorrowPerYearInterestRateSlopeHigh"
  ): TypedContractEvent<
    SetBorrowPerYearInterestRateSlopeHighEvent.InputTuple,
    SetBorrowPerYearInterestRateSlopeHighEvent.OutputTuple,
    SetBorrowPerYearInterestRateSlopeHighEvent.OutputObject
  >;
  getEvent(
    key: "SetBorrowPerYearInterestRateSlopeLow"
  ): TypedContractEvent<
    SetBorrowPerYearInterestRateSlopeLowEvent.InputTuple,
    SetBorrowPerYearInterestRateSlopeLowEvent.OutputTuple,
    SetBorrowPerYearInterestRateSlopeLowEvent.OutputObject
  >;
  getEvent(
    key: "SetConfiguration"
  ): TypedContractEvent<
    SetConfigurationEvent.InputTuple,
    SetConfigurationEvent.OutputTuple,
    SetConfigurationEvent.OutputObject
  >;
  getEvent(
    key: "SetExtensionDelegate"
  ): TypedContractEvent<
    SetExtensionDelegateEvent.InputTuple,
    SetExtensionDelegateEvent.OutputTuple,
    SetExtensionDelegateEvent.OutputObject
  >;
  getEvent(
    key: "SetFactory"
  ): TypedContractEvent<
    SetFactoryEvent.InputTuple,
    SetFactoryEvent.OutputTuple,
    SetFactoryEvent.OutputObject
  >;
  getEvent(
    key: "SetGovernor"
  ): TypedContractEvent<
    SetGovernorEvent.InputTuple,
    SetGovernorEvent.OutputTuple,
    SetGovernorEvent.OutputObject
  >;
  getEvent(
    key: "SetPauseGuardian"
  ): TypedContractEvent<
    SetPauseGuardianEvent.InputTuple,
    SetPauseGuardianEvent.OutputTuple,
    SetPauseGuardianEvent.OutputObject
  >;
  getEvent(
    key: "SetStoreFrontPriceFactor"
  ): TypedContractEvent<
    SetStoreFrontPriceFactorEvent.InputTuple,
    SetStoreFrontPriceFactorEvent.OutputTuple,
    SetStoreFrontPriceFactorEvent.OutputObject
  >;
  getEvent(
    key: "SetSupplyKink"
  ): TypedContractEvent<
    SetSupplyKinkEvent.InputTuple,
    SetSupplyKinkEvent.OutputTuple,
    SetSupplyKinkEvent.OutputObject
  >;
  getEvent(
    key: "SetSupplyPerYearInterestRateBase"
  ): TypedContractEvent<
    SetSupplyPerYearInterestRateBaseEvent.InputTuple,
    SetSupplyPerYearInterestRateBaseEvent.OutputTuple,
    SetSupplyPerYearInterestRateBaseEvent.OutputObject
  >;
  getEvent(
    key: "SetSupplyPerYearInterestRateSlopeHigh"
  ): TypedContractEvent<
    SetSupplyPerYearInterestRateSlopeHighEvent.InputTuple,
    SetSupplyPerYearInterestRateSlopeHighEvent.OutputTuple,
    SetSupplyPerYearInterestRateSlopeHighEvent.OutputObject
  >;
  getEvent(
    key: "SetSupplyPerYearInterestRateSlopeLow"
  ): TypedContractEvent<
    SetSupplyPerYearInterestRateSlopeLowEvent.InputTuple,
    SetSupplyPerYearInterestRateSlopeLowEvent.OutputTuple,
    SetSupplyPerYearInterestRateSlopeLowEvent.OutputObject
  >;
  getEvent(
    key: "SetTargetReserves"
  ): TypedContractEvent<
    SetTargetReservesEvent.InputTuple,
    SetTargetReservesEvent.OutputTuple,
    SetTargetReservesEvent.OutputObject
  >;
  getEvent(
    key: "UpdateAsset"
  ): TypedContractEvent<
    UpdateAssetEvent.InputTuple,
    UpdateAssetEvent.OutputTuple,
    UpdateAssetEvent.OutputObject
  >;
  getEvent(
    key: "UpdateAssetBorrowCollateralFactor"
  ): TypedContractEvent<
    UpdateAssetBorrowCollateralFactorEvent.InputTuple,
    UpdateAssetBorrowCollateralFactorEvent.OutputTuple,
    UpdateAssetBorrowCollateralFactorEvent.OutputObject
  >;
  getEvent(
    key: "UpdateAssetLiquidateCollateralFactor"
  ): TypedContractEvent<
    UpdateAssetLiquidateCollateralFactorEvent.InputTuple,
    UpdateAssetLiquidateCollateralFactorEvent.OutputTuple,
    UpdateAssetLiquidateCollateralFactorEvent.OutputObject
  >;
  getEvent(
    key: "UpdateAssetLiquidationFactor"
  ): TypedContractEvent<
    UpdateAssetLiquidationFactorEvent.InputTuple,
    UpdateAssetLiquidationFactorEvent.OutputTuple,
    UpdateAssetLiquidationFactorEvent.OutputObject
  >;
  getEvent(
    key: "UpdateAssetPriceFeed"
  ): TypedContractEvent<
    UpdateAssetPriceFeedEvent.InputTuple,
    UpdateAssetPriceFeedEvent.OutputTuple,
    UpdateAssetPriceFeedEvent.OutputObject
  >;
  getEvent(
    key: "UpdateAssetSupplyCap"
  ): TypedContractEvent<
    UpdateAssetSupplyCapEvent.InputTuple,
    UpdateAssetSupplyCapEvent.OutputTuple,
    UpdateAssetSupplyCapEvent.OutputObject
  >;

  filters: {
    "AddAsset(address,tuple)": TypedContractEvent<
      AddAssetEvent.InputTuple,
      AddAssetEvent.OutputTuple,
      AddAssetEvent.OutputObject
    >;
    AddAsset: TypedContractEvent<
      AddAssetEvent.InputTuple,
      AddAssetEvent.OutputTuple,
      AddAssetEvent.OutputObject
    >;

    "CometDeployed(address,address)": TypedContractEvent<
      CometDeployedEvent.InputTuple,
      CometDeployedEvent.OutputTuple,
      CometDeployedEvent.OutputObject
    >;
    CometDeployed: TypedContractEvent<
      CometDeployedEvent.InputTuple,
      CometDeployedEvent.OutputTuple,
      CometDeployedEvent.OutputObject
    >;

    "GovernorTransferred(address,address)": TypedContractEvent<
      GovernorTransferredEvent.InputTuple,
      GovernorTransferredEvent.OutputTuple,
      GovernorTransferredEvent.OutputObject
    >;
    GovernorTransferred: TypedContractEvent<
      GovernorTransferredEvent.InputTuple,
      GovernorTransferredEvent.OutputTuple,
      GovernorTransferredEvent.OutputObject
    >;

    "SetBaseBorrowMin(address,uint104,uint104)": TypedContractEvent<
      SetBaseBorrowMinEvent.InputTuple,
      SetBaseBorrowMinEvent.OutputTuple,
      SetBaseBorrowMinEvent.OutputObject
    >;
    SetBaseBorrowMin: TypedContractEvent<
      SetBaseBorrowMinEvent.InputTuple,
      SetBaseBorrowMinEvent.OutputTuple,
      SetBaseBorrowMinEvent.OutputObject
    >;

    "SetBaseMinForRewards(address,uint104,uint104)": TypedContractEvent<
      SetBaseMinForRewardsEvent.InputTuple,
      SetBaseMinForRewardsEvent.OutputTuple,
      SetBaseMinForRewardsEvent.OutputObject
    >;
    SetBaseMinForRewards: TypedContractEvent<
      SetBaseMinForRewardsEvent.InputTuple,
      SetBaseMinForRewardsEvent.OutputTuple,
      SetBaseMinForRewardsEvent.OutputObject
    >;

    "SetBaseTokenPriceFeed(address,address,address)": TypedContractEvent<
      SetBaseTokenPriceFeedEvent.InputTuple,
      SetBaseTokenPriceFeedEvent.OutputTuple,
      SetBaseTokenPriceFeedEvent.OutputObject
    >;
    SetBaseTokenPriceFeed: TypedContractEvent<
      SetBaseTokenPriceFeedEvent.InputTuple,
      SetBaseTokenPriceFeedEvent.OutputTuple,
      SetBaseTokenPriceFeedEvent.OutputObject
    >;

    "SetBaseTrackingBorrowSpeed(address,uint64,uint64)": TypedContractEvent<
      SetBaseTrackingBorrowSpeedEvent.InputTuple,
      SetBaseTrackingBorrowSpeedEvent.OutputTuple,
      SetBaseTrackingBorrowSpeedEvent.OutputObject
    >;
    SetBaseTrackingBorrowSpeed: TypedContractEvent<
      SetBaseTrackingBorrowSpeedEvent.InputTuple,
      SetBaseTrackingBorrowSpeedEvent.OutputTuple,
      SetBaseTrackingBorrowSpeedEvent.OutputObject
    >;

    "SetBaseTrackingSupplySpeed(address,uint64,uint64)": TypedContractEvent<
      SetBaseTrackingSupplySpeedEvent.InputTuple,
      SetBaseTrackingSupplySpeedEvent.OutputTuple,
      SetBaseTrackingSupplySpeedEvent.OutputObject
    >;
    SetBaseTrackingSupplySpeed: TypedContractEvent<
      SetBaseTrackingSupplySpeedEvent.InputTuple,
      SetBaseTrackingSupplySpeedEvent.OutputTuple,
      SetBaseTrackingSupplySpeedEvent.OutputObject
    >;

    "SetBorrowKink(address,uint64,uint64)": TypedContractEvent<
      SetBorrowKinkEvent.InputTuple,
      SetBorrowKinkEvent.OutputTuple,
      SetBorrowKinkEvent.OutputObject
    >;
    SetBorrowKink: TypedContractEvent<
      SetBorrowKinkEvent.InputTuple,
      SetBorrowKinkEvent.OutputTuple,
      SetBorrowKinkEvent.OutputObject
    >;

    "SetBorrowPerYearInterestRateBase(address,uint64,uint64)": TypedContractEvent<
      SetBorrowPerYearInterestRateBaseEvent.InputTuple,
      SetBorrowPerYearInterestRateBaseEvent.OutputTuple,
      SetBorrowPerYearInterestRateBaseEvent.OutputObject
    >;
    SetBorrowPerYearInterestRateBase: TypedContractEvent<
      SetBorrowPerYearInterestRateBaseEvent.InputTuple,
      SetBorrowPerYearInterestRateBaseEvent.OutputTuple,
      SetBorrowPerYearInterestRateBaseEvent.OutputObject
    >;

    "SetBorrowPerYearInterestRateSlopeHigh(address,uint64,uint64)": TypedContractEvent<
      SetBorrowPerYearInterestRateSlopeHighEvent.InputTuple,
      SetBorrowPerYearInterestRateSlopeHighEvent.OutputTuple,
      SetBorrowPerYearInterestRateSlopeHighEvent.OutputObject
    >;
    SetBorrowPerYearInterestRateSlopeHigh: TypedContractEvent<
      SetBorrowPerYearInterestRateSlopeHighEvent.InputTuple,
      SetBorrowPerYearInterestRateSlopeHighEvent.OutputTuple,
      SetBorrowPerYearInterestRateSlopeHighEvent.OutputObject
    >;

    "SetBorrowPerYearInterestRateSlopeLow(address,uint64,uint64)": TypedContractEvent<
      SetBorrowPerYearInterestRateSlopeLowEvent.InputTuple,
      SetBorrowPerYearInterestRateSlopeLowEvent.OutputTuple,
      SetBorrowPerYearInterestRateSlopeLowEvent.OutputObject
    >;
    SetBorrowPerYearInterestRateSlopeLow: TypedContractEvent<
      SetBorrowPerYearInterestRateSlopeLowEvent.InputTuple,
      SetBorrowPerYearInterestRateSlopeLowEvent.OutputTuple,
      SetBorrowPerYearInterestRateSlopeLowEvent.OutputObject
    >;

    "SetConfiguration(address,tuple,tuple)": TypedContractEvent<
      SetConfigurationEvent.InputTuple,
      SetConfigurationEvent.OutputTuple,
      SetConfigurationEvent.OutputObject
    >;
    SetConfiguration: TypedContractEvent<
      SetConfigurationEvent.InputTuple,
      SetConfigurationEvent.OutputTuple,
      SetConfigurationEvent.OutputObject
    >;

    "SetExtensionDelegate(address,address,address)": TypedContractEvent<
      SetExtensionDelegateEvent.InputTuple,
      SetExtensionDelegateEvent.OutputTuple,
      SetExtensionDelegateEvent.OutputObject
    >;
    SetExtensionDelegate: TypedContractEvent<
      SetExtensionDelegateEvent.InputTuple,
      SetExtensionDelegateEvent.OutputTuple,
      SetExtensionDelegateEvent.OutputObject
    >;

    "SetFactory(address,address,address)": TypedContractEvent<
      SetFactoryEvent.InputTuple,
      SetFactoryEvent.OutputTuple,
      SetFactoryEvent.OutputObject
    >;
    SetFactory: TypedContractEvent<
      SetFactoryEvent.InputTuple,
      SetFactoryEvent.OutputTuple,
      SetFactoryEvent.OutputObject
    >;

    "SetGovernor(address,address,address)": TypedContractEvent<
      SetGovernorEvent.InputTuple,
      SetGovernorEvent.OutputTuple,
      SetGovernorEvent.OutputObject
    >;
    SetGovernor: TypedContractEvent<
      SetGovernorEvent.InputTuple,
      SetGovernorEvent.OutputTuple,
      SetGovernorEvent.OutputObject
    >;

    "SetPauseGuardian(address,address,address)": TypedContractEvent<
      SetPauseGuardianEvent.InputTuple,
      SetPauseGuardianEvent.OutputTuple,
      SetPauseGuardianEvent.OutputObject
    >;
    SetPauseGuardian: TypedContractEvent<
      SetPauseGuardianEvent.InputTuple,
      SetPauseGuardianEvent.OutputTuple,
      SetPauseGuardianEvent.OutputObject
    >;

    "SetStoreFrontPriceFactor(address,uint64,uint64)": TypedContractEvent<
      SetStoreFrontPriceFactorEvent.InputTuple,
      SetStoreFrontPriceFactorEvent.OutputTuple,
      SetStoreFrontPriceFactorEvent.OutputObject
    >;
    SetStoreFrontPriceFactor: TypedContractEvent<
      SetStoreFrontPriceFactorEvent.InputTuple,
      SetStoreFrontPriceFactorEvent.OutputTuple,
      SetStoreFrontPriceFactorEvent.OutputObject
    >;

    "SetSupplyKink(address,uint64,uint64)": TypedContractEvent<
      SetSupplyKinkEvent.InputTuple,
      SetSupplyKinkEvent.OutputTuple,
      SetSupplyKinkEvent.OutputObject
    >;
    SetSupplyKink: TypedContractEvent<
      SetSupplyKinkEvent.InputTuple,
      SetSupplyKinkEvent.OutputTuple,
      SetSupplyKinkEvent.OutputObject
    >;

    "SetSupplyPerYearInterestRateBase(address,uint64,uint64)": TypedContractEvent<
      SetSupplyPerYearInterestRateBaseEvent.InputTuple,
      SetSupplyPerYearInterestRateBaseEvent.OutputTuple,
      SetSupplyPerYearInterestRateBaseEvent.OutputObject
    >;
    SetSupplyPerYearInterestRateBase: TypedContractEvent<
      SetSupplyPerYearInterestRateBaseEvent.InputTuple,
      SetSupplyPerYearInterestRateBaseEvent.OutputTuple,
      SetSupplyPerYearInterestRateBaseEvent.OutputObject
    >;

    "SetSupplyPerYearInterestRateSlopeHigh(address,uint64,uint64)": TypedContractEvent<
      SetSupplyPerYearInterestRateSlopeHighEvent.InputTuple,
      SetSupplyPerYearInterestRateSlopeHighEvent.OutputTuple,
      SetSupplyPerYearInterestRateSlopeHighEvent.OutputObject
    >;
    SetSupplyPerYearInterestRateSlopeHigh: TypedContractEvent<
      SetSupplyPerYearInterestRateSlopeHighEvent.InputTuple,
      SetSupplyPerYearInterestRateSlopeHighEvent.OutputTuple,
      SetSupplyPerYearInterestRateSlopeHighEvent.OutputObject
    >;

    "SetSupplyPerYearInterestRateSlopeLow(address,uint64,uint64)": TypedContractEvent<
      SetSupplyPerYearInterestRateSlopeLowEvent.InputTuple,
      SetSupplyPerYearInterestRateSlopeLowEvent.OutputTuple,
      SetSupplyPerYearInterestRateSlopeLowEvent.OutputObject
    >;
    SetSupplyPerYearInterestRateSlopeLow: TypedContractEvent<
      SetSupplyPerYearInterestRateSlopeLowEvent.InputTuple,
      SetSupplyPerYearInterestRateSlopeLowEvent.OutputTuple,
      SetSupplyPerYearInterestRateSlopeLowEvent.OutputObject
    >;

    "SetTargetReserves(address,uint104,uint104)": TypedContractEvent<
      SetTargetReservesEvent.InputTuple,
      SetTargetReservesEvent.OutputTuple,
      SetTargetReservesEvent.OutputObject
    >;
    SetTargetReserves: TypedContractEvent<
      SetTargetReservesEvent.InputTuple,
      SetTargetReservesEvent.OutputTuple,
      SetTargetReservesEvent.OutputObject
    >;

    "UpdateAsset(address,tuple,tuple)": TypedContractEvent<
      UpdateAssetEvent.InputTuple,
      UpdateAssetEvent.OutputTuple,
      UpdateAssetEvent.OutputObject
    >;
    UpdateAsset: TypedContractEvent<
      UpdateAssetEvent.InputTuple,
      UpdateAssetEvent.OutputTuple,
      UpdateAssetEvent.OutputObject
    >;

    "UpdateAssetBorrowCollateralFactor(address,address,uint64,uint64)": TypedContractEvent<
      UpdateAssetBorrowCollateralFactorEvent.InputTuple,
      UpdateAssetBorrowCollateralFactorEvent.OutputTuple,
      UpdateAssetBorrowCollateralFactorEvent.OutputObject
    >;
    UpdateAssetBorrowCollateralFactor: TypedContractEvent<
      UpdateAssetBorrowCollateralFactorEvent.InputTuple,
      UpdateAssetBorrowCollateralFactorEvent.OutputTuple,
      UpdateAssetBorrowCollateralFactorEvent.OutputObject
    >;

    "UpdateAssetLiquidateCollateralFactor(address,address,uint64,uint64)": TypedContractEvent<
      UpdateAssetLiquidateCollateralFactorEvent.InputTuple,
      UpdateAssetLiquidateCollateralFactorEvent.OutputTuple,
      UpdateAssetLiquidateCollateralFactorEvent.OutputObject
    >;
    UpdateAssetLiquidateCollateralFactor: TypedContractEvent<
      UpdateAssetLiquidateCollateralFactorEvent.InputTuple,
      UpdateAssetLiquidateCollateralFactorEvent.OutputTuple,
      UpdateAssetLiquidateCollateralFactorEvent.OutputObject
    >;

    "UpdateAssetLiquidationFactor(address,address,uint64,uint64)": TypedContractEvent<
      UpdateAssetLiquidationFactorEvent.InputTuple,
      UpdateAssetLiquidationFactorEvent.OutputTuple,
      UpdateAssetLiquidationFactorEvent.OutputObject
    >;
    UpdateAssetLiquidationFactor: TypedContractEvent<
      UpdateAssetLiquidationFactorEvent.InputTuple,
      UpdateAssetLiquidationFactorEvent.OutputTuple,
      UpdateAssetLiquidationFactorEvent.OutputObject
    >;

    "UpdateAssetPriceFeed(address,address,address,address)": TypedContractEvent<
      UpdateAssetPriceFeedEvent.InputTuple,
      UpdateAssetPriceFeedEvent.OutputTuple,
      UpdateAssetPriceFeedEvent.OutputObject
    >;
    UpdateAssetPriceFeed: TypedContractEvent<
      UpdateAssetPriceFeedEvent.InputTuple,
      UpdateAssetPriceFeedEvent.OutputTuple,
      UpdateAssetPriceFeedEvent.OutputObject
    >;

    "UpdateAssetSupplyCap(address,address,uint128,uint128)": TypedContractEvent<
      UpdateAssetSupplyCapEvent.InputTuple,
      UpdateAssetSupplyCapEvent.OutputTuple,
      UpdateAssetSupplyCapEvent.OutputObject
    >;
    UpdateAssetSupplyCap: TypedContractEvent<
      UpdateAssetSupplyCapEvent.InputTuple,
      UpdateAssetSupplyCapEvent.OutputTuple,
      UpdateAssetSupplyCapEvent.OutputObject
    >;
  };
}
