/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../common";

export declare namespace CometConfiguration {
  export type AssetConfigStruct = {
    asset: string;
    priceFeed: string;
    decimals: BigNumberish;
    borrowCollateralFactor: BigNumberish;
    liquidateCollateralFactor: BigNumberish;
    liquidationFactor: BigNumberish;
    supplyCap: BigNumberish;
  };

  export type AssetConfigStructOutput = [
    string,
    string,
    number,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    asset: string;
    priceFeed: string;
    decimals: number;
    borrowCollateralFactor: BigNumber;
    liquidateCollateralFactor: BigNumber;
    liquidationFactor: BigNumber;
    supplyCap: BigNumber;
  };

  export type ConfigurationStruct = {
    governor: string;
    pauseGuardian: string;
    baseToken: string;
    baseTokenPriceFeed: string;
    extensionDelegate: string;
    supplyKink: BigNumberish;
    supplyPerYearInterestRateSlopeLow: BigNumberish;
    supplyPerYearInterestRateSlopeHigh: BigNumberish;
    supplyPerYearInterestRateBase: BigNumberish;
    borrowKink: BigNumberish;
    borrowPerYearInterestRateSlopeLow: BigNumberish;
    borrowPerYearInterestRateSlopeHigh: BigNumberish;
    borrowPerYearInterestRateBase: BigNumberish;
    storeFrontPriceFactor: BigNumberish;
    trackingIndexScale: BigNumberish;
    baseTrackingSupplySpeed: BigNumberish;
    baseTrackingBorrowSpeed: BigNumberish;
    baseMinForRewards: BigNumberish;
    baseBorrowMin: BigNumberish;
    targetReserves: BigNumberish;
    assetConfigs: CometConfiguration.AssetConfigStruct[];
  };

  export type ConfigurationStructOutput = [
    string,
    string,
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    CometConfiguration.AssetConfigStructOutput[]
  ] & {
    governor: string;
    pauseGuardian: string;
    baseToken: string;
    baseTokenPriceFeed: string;
    extensionDelegate: string;
    supplyKink: BigNumber;
    supplyPerYearInterestRateSlopeLow: BigNumber;
    supplyPerYearInterestRateSlopeHigh: BigNumber;
    supplyPerYearInterestRateBase: BigNumber;
    borrowKink: BigNumber;
    borrowPerYearInterestRateSlopeLow: BigNumber;
    borrowPerYearInterestRateSlopeHigh: BigNumber;
    borrowPerYearInterestRateBase: BigNumber;
    storeFrontPriceFactor: BigNumber;
    trackingIndexScale: BigNumber;
    baseTrackingSupplySpeed: BigNumber;
    baseTrackingBorrowSpeed: BigNumber;
    baseMinForRewards: BigNumber;
    baseBorrowMin: BigNumber;
    targetReserves: BigNumber;
    assetConfigs: CometConfiguration.AssetConfigStructOutput[];
  };
}

export interface ConfiguratorInterface extends utils.Interface {
  functions: {
    "addAsset(address,(address,address,uint8,uint64,uint64,uint64,uint128))": FunctionFragment;
    "deploy(address)": FunctionFragment;
    "factory(address)": FunctionFragment;
    "getAssetIndex(address,address)": FunctionFragment;
    "getConfiguration(address)": FunctionFragment;
    "governor()": FunctionFragment;
    "initialize(address)": FunctionFragment;
    "setBaseBorrowMin(address,uint104)": FunctionFragment;
    "setBaseMinForRewards(address,uint104)": FunctionFragment;
    "setBaseTokenPriceFeed(address,address)": FunctionFragment;
    "setBaseTrackingBorrowSpeed(address,uint64)": FunctionFragment;
    "setBaseTrackingSupplySpeed(address,uint64)": FunctionFragment;
    "setBorrowKink(address,uint64)": FunctionFragment;
    "setBorrowPerYearInterestRateBase(address,uint64)": FunctionFragment;
    "setBorrowPerYearInterestRateSlopeHigh(address,uint64)": FunctionFragment;
    "setBorrowPerYearInterestRateSlopeLow(address,uint64)": FunctionFragment;
    "setConfiguration(address,(address,address,address,address,address,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint104,uint104,uint104,(address,address,uint8,uint64,uint64,uint64,uint128)[]))": FunctionFragment;
    "setExtensionDelegate(address,address)": FunctionFragment;
    "setFactory(address,address)": FunctionFragment;
    "setGovernor(address,address)": FunctionFragment;
    "setPauseGuardian(address,address)": FunctionFragment;
    "setStoreFrontPriceFactor(address,uint64)": FunctionFragment;
    "setSupplyKink(address,uint64)": FunctionFragment;
    "setSupplyPerYearInterestRateBase(address,uint64)": FunctionFragment;
    "setSupplyPerYearInterestRateSlopeHigh(address,uint64)": FunctionFragment;
    "setSupplyPerYearInterestRateSlopeLow(address,uint64)": FunctionFragment;
    "setTargetReserves(address,uint104)": FunctionFragment;
    "transferGovernor(address)": FunctionFragment;
    "updateAsset(address,(address,address,uint8,uint64,uint64,uint64,uint128))": FunctionFragment;
    "updateAssetBorrowCollateralFactor(address,address,uint64)": FunctionFragment;
    "updateAssetLiquidateCollateralFactor(address,address,uint64)": FunctionFragment;
    "updateAssetLiquidationFactor(address,address,uint64)": FunctionFragment;
    "updateAssetPriceFeed(address,address,address)": FunctionFragment;
    "updateAssetSupplyCap(address,address,uint128)": FunctionFragment;
    "version()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addAsset"
      | "deploy"
      | "factory"
      | "getAssetIndex"
      | "getConfiguration"
      | "governor"
      | "initialize"
      | "setBaseBorrowMin"
      | "setBaseMinForRewards"
      | "setBaseTokenPriceFeed"
      | "setBaseTrackingBorrowSpeed"
      | "setBaseTrackingSupplySpeed"
      | "setBorrowKink"
      | "setBorrowPerYearInterestRateBase"
      | "setBorrowPerYearInterestRateSlopeHigh"
      | "setBorrowPerYearInterestRateSlopeLow"
      | "setConfiguration"
      | "setExtensionDelegate"
      | "setFactory"
      | "setGovernor"
      | "setPauseGuardian"
      | "setStoreFrontPriceFactor"
      | "setSupplyKink"
      | "setSupplyPerYearInterestRateBase"
      | "setSupplyPerYearInterestRateSlopeHigh"
      | "setSupplyPerYearInterestRateSlopeLow"
      | "setTargetReserves"
      | "transferGovernor"
      | "updateAsset"
      | "updateAssetBorrowCollateralFactor"
      | "updateAssetLiquidateCollateralFactor"
      | "updateAssetLiquidationFactor"
      | "updateAssetPriceFeed"
      | "updateAssetSupplyCap"
      | "version"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addAsset",
    values: [string, CometConfiguration.AssetConfigStruct]
  ): string;
  encodeFunctionData(functionFragment: "deploy", values: [string]): string;
  encodeFunctionData(functionFragment: "factory", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getAssetIndex",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getConfiguration",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "governor", values?: undefined): string;
  encodeFunctionData(functionFragment: "initialize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setBaseBorrowMin",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBaseMinForRewards",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBaseTokenPriceFeed",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setBaseTrackingBorrowSpeed",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBaseTrackingSupplySpeed",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBorrowKink",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBorrowPerYearInterestRateBase",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBorrowPerYearInterestRateSlopeHigh",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBorrowPerYearInterestRateSlopeLow",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setConfiguration",
    values: [string, CometConfiguration.ConfigurationStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setExtensionDelegate",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setFactory",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setGovernor",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setPauseGuardian",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setStoreFrontPriceFactor",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setSupplyKink",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setSupplyPerYearInterestRateBase",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setSupplyPerYearInterestRateSlopeHigh",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setSupplyPerYearInterestRateSlopeLow",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setTargetReserves",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferGovernor",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAsset",
    values: [string, CometConfiguration.AssetConfigStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAssetBorrowCollateralFactor",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAssetLiquidateCollateralFactor",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAssetLiquidationFactor",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAssetPriceFeed",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAssetSupplyCap",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "version", values?: undefined): string;

  decodeFunctionResult(functionFragment: "addAsset", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "deploy", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "factory", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAssetIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "governor", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setBaseBorrowMin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBaseMinForRewards",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBaseTokenPriceFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBaseTrackingBorrowSpeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBaseTrackingSupplySpeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBorrowKink",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBorrowPerYearInterestRateBase",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBorrowPerYearInterestRateSlopeHigh",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBorrowPerYearInterestRateSlopeLow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setExtensionDelegate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setFactory", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setGovernor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPauseGuardian",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setStoreFrontPriceFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSupplyKink",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSupplyPerYearInterestRateBase",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSupplyPerYearInterestRateSlopeHigh",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSupplyPerYearInterestRateSlopeLow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTargetReserves",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferGovernor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAssetBorrowCollateralFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAssetLiquidateCollateralFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAssetLiquidationFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAssetPriceFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAssetSupplyCap",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "version", data: BytesLike): Result;

  events: {
    "AddAsset(address,tuple)": EventFragment;
    "CometDeployed(address,address)": EventFragment;
    "GovernorTransferred(address,address)": EventFragment;
    "SetBaseBorrowMin(address,uint104,uint104)": EventFragment;
    "SetBaseMinForRewards(address,uint104,uint104)": EventFragment;
    "SetBaseTokenPriceFeed(address,address,address)": EventFragment;
    "SetBaseTrackingBorrowSpeed(address,uint64,uint64)": EventFragment;
    "SetBaseTrackingSupplySpeed(address,uint64,uint64)": EventFragment;
    "SetBorrowKink(address,uint64,uint64)": EventFragment;
    "SetBorrowPerYearInterestRateBase(address,uint64,uint64)": EventFragment;
    "SetBorrowPerYearInterestRateSlopeHigh(address,uint64,uint64)": EventFragment;
    "SetBorrowPerYearInterestRateSlopeLow(address,uint64,uint64)": EventFragment;
    "SetConfiguration(address,tuple,tuple)": EventFragment;
    "SetExtensionDelegate(address,address,address)": EventFragment;
    "SetFactory(address,address,address)": EventFragment;
    "SetGovernor(address,address,address)": EventFragment;
    "SetPauseGuardian(address,address,address)": EventFragment;
    "SetStoreFrontPriceFactor(address,uint64,uint64)": EventFragment;
    "SetSupplyKink(address,uint64,uint64)": EventFragment;
    "SetSupplyPerYearInterestRateBase(address,uint64,uint64)": EventFragment;
    "SetSupplyPerYearInterestRateSlopeHigh(address,uint64,uint64)": EventFragment;
    "SetSupplyPerYearInterestRateSlopeLow(address,uint64,uint64)": EventFragment;
    "SetTargetReserves(address,uint104,uint104)": EventFragment;
    "UpdateAsset(address,tuple,tuple)": EventFragment;
    "UpdateAssetBorrowCollateralFactor(address,address,uint64,uint64)": EventFragment;
    "UpdateAssetLiquidateCollateralFactor(address,address,uint64,uint64)": EventFragment;
    "UpdateAssetLiquidationFactor(address,address,uint64,uint64)": EventFragment;
    "UpdateAssetPriceFeed(address,address,address,address)": EventFragment;
    "UpdateAssetSupplyCap(address,address,uint128,uint128)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AddAsset"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CometDeployed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GovernorTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetBaseBorrowMin"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetBaseMinForRewards"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetBaseTokenPriceFeed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetBaseTrackingBorrowSpeed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetBaseTrackingSupplySpeed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetBorrowKink"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "SetBorrowPerYearInterestRateBase"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "SetBorrowPerYearInterestRateSlopeHigh"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "SetBorrowPerYearInterestRateSlopeLow"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetConfiguration"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetExtensionDelegate"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetFactory"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetGovernor"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetPauseGuardian"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetStoreFrontPriceFactor"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetSupplyKink"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "SetSupplyPerYearInterestRateBase"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "SetSupplyPerYearInterestRateSlopeHigh"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "SetSupplyPerYearInterestRateSlopeLow"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetTargetReserves"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "UpdateAsset"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "UpdateAssetBorrowCollateralFactor"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "UpdateAssetLiquidateCollateralFactor"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "UpdateAssetLiquidationFactor"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "UpdateAssetPriceFeed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "UpdateAssetSupplyCap"): EventFragment;
}

export interface AddAssetEventObject {
  cometProxy: string;
  assetConfig: CometConfiguration.AssetConfigStructOutput;
}
export type AddAssetEvent = TypedEvent<
  [string, CometConfiguration.AssetConfigStructOutput],
  AddAssetEventObject
>;

export type AddAssetEventFilter = TypedEventFilter<AddAssetEvent>;

export interface CometDeployedEventObject {
  cometProxy: string;
  newComet: string;
}
export type CometDeployedEvent = TypedEvent<
  [string, string],
  CometDeployedEventObject
>;

export type CometDeployedEventFilter = TypedEventFilter<CometDeployedEvent>;

export interface GovernorTransferredEventObject {
  oldGovernor: string;
  newGovernor: string;
}
export type GovernorTransferredEvent = TypedEvent<
  [string, string],
  GovernorTransferredEventObject
>;

export type GovernorTransferredEventFilter =
  TypedEventFilter<GovernorTransferredEvent>;

export interface SetBaseBorrowMinEventObject {
  cometProxy: string;
  oldBaseBorrowMin: BigNumber;
  newBaseBorrowMin: BigNumber;
}
export type SetBaseBorrowMinEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetBaseBorrowMinEventObject
>;

export type SetBaseBorrowMinEventFilter =
  TypedEventFilter<SetBaseBorrowMinEvent>;

export interface SetBaseMinForRewardsEventObject {
  cometProxy: string;
  oldBaseMinForRewards: BigNumber;
  newBaseMinForRewards: BigNumber;
}
export type SetBaseMinForRewardsEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetBaseMinForRewardsEventObject
>;

export type SetBaseMinForRewardsEventFilter =
  TypedEventFilter<SetBaseMinForRewardsEvent>;

export interface SetBaseTokenPriceFeedEventObject {
  cometProxy: string;
  oldBaseTokenPriceFeed: string;
  newBaseTokenPriceFeed: string;
}
export type SetBaseTokenPriceFeedEvent = TypedEvent<
  [string, string, string],
  SetBaseTokenPriceFeedEventObject
>;

export type SetBaseTokenPriceFeedEventFilter =
  TypedEventFilter<SetBaseTokenPriceFeedEvent>;

export interface SetBaseTrackingBorrowSpeedEventObject {
  cometProxy: string;
  oldBaseTrackingBorrowSpeed: BigNumber;
  newBaseTrackingBorrowSpeed: BigNumber;
}
export type SetBaseTrackingBorrowSpeedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetBaseTrackingBorrowSpeedEventObject
>;

export type SetBaseTrackingBorrowSpeedEventFilter =
  TypedEventFilter<SetBaseTrackingBorrowSpeedEvent>;

export interface SetBaseTrackingSupplySpeedEventObject {
  cometProxy: string;
  oldBaseTrackingSupplySpeed: BigNumber;
  newBaseTrackingSupplySpeed: BigNumber;
}
export type SetBaseTrackingSupplySpeedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetBaseTrackingSupplySpeedEventObject
>;

export type SetBaseTrackingSupplySpeedEventFilter =
  TypedEventFilter<SetBaseTrackingSupplySpeedEvent>;

export interface SetBorrowKinkEventObject {
  cometProxy: string;
  oldKink: BigNumber;
  newKink: BigNumber;
}
export type SetBorrowKinkEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetBorrowKinkEventObject
>;

export type SetBorrowKinkEventFilter = TypedEventFilter<SetBorrowKinkEvent>;

export interface SetBorrowPerYearInterestRateBaseEventObject {
  cometProxy: string;
  oldIRBase: BigNumber;
  newIRBase: BigNumber;
}
export type SetBorrowPerYearInterestRateBaseEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetBorrowPerYearInterestRateBaseEventObject
>;

export type SetBorrowPerYearInterestRateBaseEventFilter =
  TypedEventFilter<SetBorrowPerYearInterestRateBaseEvent>;

export interface SetBorrowPerYearInterestRateSlopeHighEventObject {
  cometProxy: string;
  oldIRSlopeHigh: BigNumber;
  newIRSlopeHigh: BigNumber;
}
export type SetBorrowPerYearInterestRateSlopeHighEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetBorrowPerYearInterestRateSlopeHighEventObject
>;

export type SetBorrowPerYearInterestRateSlopeHighEventFilter =
  TypedEventFilter<SetBorrowPerYearInterestRateSlopeHighEvent>;

export interface SetBorrowPerYearInterestRateSlopeLowEventObject {
  cometProxy: string;
  oldIRSlopeLow: BigNumber;
  newIRSlopeLow: BigNumber;
}
export type SetBorrowPerYearInterestRateSlopeLowEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetBorrowPerYearInterestRateSlopeLowEventObject
>;

export type SetBorrowPerYearInterestRateSlopeLowEventFilter =
  TypedEventFilter<SetBorrowPerYearInterestRateSlopeLowEvent>;

export interface SetConfigurationEventObject {
  cometProxy: string;
  oldConfiguration: CometConfiguration.ConfigurationStructOutput;
  newConfiguration: CometConfiguration.ConfigurationStructOutput;
}
export type SetConfigurationEvent = TypedEvent<
  [
    string,
    CometConfiguration.ConfigurationStructOutput,
    CometConfiguration.ConfigurationStructOutput
  ],
  SetConfigurationEventObject
>;

export type SetConfigurationEventFilter =
  TypedEventFilter<SetConfigurationEvent>;

export interface SetExtensionDelegateEventObject {
  cometProxy: string;
  oldExt: string;
  newExt: string;
}
export type SetExtensionDelegateEvent = TypedEvent<
  [string, string, string],
  SetExtensionDelegateEventObject
>;

export type SetExtensionDelegateEventFilter =
  TypedEventFilter<SetExtensionDelegateEvent>;

export interface SetFactoryEventObject {
  cometProxy: string;
  oldFactory: string;
  newFactory: string;
}
export type SetFactoryEvent = TypedEvent<
  [string, string, string],
  SetFactoryEventObject
>;

export type SetFactoryEventFilter = TypedEventFilter<SetFactoryEvent>;

export interface SetGovernorEventObject {
  cometProxy: string;
  oldGovernor: string;
  newGovernor: string;
}
export type SetGovernorEvent = TypedEvent<
  [string, string, string],
  SetGovernorEventObject
>;

export type SetGovernorEventFilter = TypedEventFilter<SetGovernorEvent>;

export interface SetPauseGuardianEventObject {
  cometProxy: string;
  oldPauseGuardian: string;
  newPauseGuardian: string;
}
export type SetPauseGuardianEvent = TypedEvent<
  [string, string, string],
  SetPauseGuardianEventObject
>;

export type SetPauseGuardianEventFilter =
  TypedEventFilter<SetPauseGuardianEvent>;

export interface SetStoreFrontPriceFactorEventObject {
  cometProxy: string;
  oldStoreFrontPriceFactor: BigNumber;
  newStoreFrontPriceFactor: BigNumber;
}
export type SetStoreFrontPriceFactorEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetStoreFrontPriceFactorEventObject
>;

export type SetStoreFrontPriceFactorEventFilter =
  TypedEventFilter<SetStoreFrontPriceFactorEvent>;

export interface SetSupplyKinkEventObject {
  cometProxy: string;
  oldKink: BigNumber;
  newKink: BigNumber;
}
export type SetSupplyKinkEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetSupplyKinkEventObject
>;

export type SetSupplyKinkEventFilter = TypedEventFilter<SetSupplyKinkEvent>;

export interface SetSupplyPerYearInterestRateBaseEventObject {
  cometProxy: string;
  oldIRBase: BigNumber;
  newIRBase: BigNumber;
}
export type SetSupplyPerYearInterestRateBaseEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetSupplyPerYearInterestRateBaseEventObject
>;

export type SetSupplyPerYearInterestRateBaseEventFilter =
  TypedEventFilter<SetSupplyPerYearInterestRateBaseEvent>;

export interface SetSupplyPerYearInterestRateSlopeHighEventObject {
  cometProxy: string;
  oldIRSlopeHigh: BigNumber;
  newIRSlopeHigh: BigNumber;
}
export type SetSupplyPerYearInterestRateSlopeHighEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetSupplyPerYearInterestRateSlopeHighEventObject
>;

export type SetSupplyPerYearInterestRateSlopeHighEventFilter =
  TypedEventFilter<SetSupplyPerYearInterestRateSlopeHighEvent>;

export interface SetSupplyPerYearInterestRateSlopeLowEventObject {
  cometProxy: string;
  oldIRSlopeLow: BigNumber;
  newIRSlopeLow: BigNumber;
}
export type SetSupplyPerYearInterestRateSlopeLowEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetSupplyPerYearInterestRateSlopeLowEventObject
>;

export type SetSupplyPerYearInterestRateSlopeLowEventFilter =
  TypedEventFilter<SetSupplyPerYearInterestRateSlopeLowEvent>;

export interface SetTargetReservesEventObject {
  cometProxy: string;
  oldTargetReserves: BigNumber;
  newTargetReserves: BigNumber;
}
export type SetTargetReservesEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  SetTargetReservesEventObject
>;

export type SetTargetReservesEventFilter =
  TypedEventFilter<SetTargetReservesEvent>;

export interface UpdateAssetEventObject {
  cometProxy: string;
  oldAssetConfig: CometConfiguration.AssetConfigStructOutput;
  newAssetConfig: CometConfiguration.AssetConfigStructOutput;
}
export type UpdateAssetEvent = TypedEvent<
  [
    string,
    CometConfiguration.AssetConfigStructOutput,
    CometConfiguration.AssetConfigStructOutput
  ],
  UpdateAssetEventObject
>;

export type UpdateAssetEventFilter = TypedEventFilter<UpdateAssetEvent>;

export interface UpdateAssetBorrowCollateralFactorEventObject {
  cometProxy: string;
  asset: string;
  oldBorrowCF: BigNumber;
  newBorrowCF: BigNumber;
}
export type UpdateAssetBorrowCollateralFactorEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  UpdateAssetBorrowCollateralFactorEventObject
>;

export type UpdateAssetBorrowCollateralFactorEventFilter =
  TypedEventFilter<UpdateAssetBorrowCollateralFactorEvent>;

export interface UpdateAssetLiquidateCollateralFactorEventObject {
  cometProxy: string;
  asset: string;
  oldLiquidateCF: BigNumber;
  newLiquidateCF: BigNumber;
}
export type UpdateAssetLiquidateCollateralFactorEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  UpdateAssetLiquidateCollateralFactorEventObject
>;

export type UpdateAssetLiquidateCollateralFactorEventFilter =
  TypedEventFilter<UpdateAssetLiquidateCollateralFactorEvent>;

export interface UpdateAssetLiquidationFactorEventObject {
  cometProxy: string;
  asset: string;
  oldLiquidationFactor: BigNumber;
  newLiquidationFactor: BigNumber;
}
export type UpdateAssetLiquidationFactorEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  UpdateAssetLiquidationFactorEventObject
>;

export type UpdateAssetLiquidationFactorEventFilter =
  TypedEventFilter<UpdateAssetLiquidationFactorEvent>;

export interface UpdateAssetPriceFeedEventObject {
  cometProxy: string;
  asset: string;
  oldPriceFeed: string;
  newPriceFeed: string;
}
export type UpdateAssetPriceFeedEvent = TypedEvent<
  [string, string, string, string],
  UpdateAssetPriceFeedEventObject
>;

export type UpdateAssetPriceFeedEventFilter =
  TypedEventFilter<UpdateAssetPriceFeedEvent>;

export interface UpdateAssetSupplyCapEventObject {
  cometProxy: string;
  asset: string;
  oldSupplyCap: BigNumber;
  newSupplyCap: BigNumber;
}
export type UpdateAssetSupplyCapEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  UpdateAssetSupplyCapEventObject
>;

export type UpdateAssetSupplyCapEventFilter =
  TypedEventFilter<UpdateAssetSupplyCapEvent>;

export interface Configurator extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ConfiguratorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addAsset(
      cometProxy: string,
      assetConfig: CometConfiguration.AssetConfigStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    deploy(
      cometProxy: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    factory(arg0: string, overrides?: CallOverrides): Promise<[string]>;

    getAssetIndex(
      cometProxy: string,
      asset: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getConfiguration(
      cometProxy: string,
      overrides?: CallOverrides
    ): Promise<[CometConfiguration.ConfigurationStructOutput]>;

    governor(overrides?: CallOverrides): Promise<[string]>;

    initialize(
      governor_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBaseBorrowMin(
      cometProxy: string,
      newBaseBorrowMin: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBaseMinForRewards(
      cometProxy: string,
      newBaseMinForRewards: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBaseTokenPriceFeed(
      cometProxy: string,
      newBaseTokenPriceFeed: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBaseTrackingBorrowSpeed(
      cometProxy: string,
      newBaseTrackingBorrowSpeed: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBaseTrackingSupplySpeed(
      cometProxy: string,
      newBaseTrackingSupplySpeed: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBorrowKink(
      cometProxy: string,
      newBorrowKink: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBorrowPerYearInterestRateBase(
      cometProxy: string,
      newBase: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBorrowPerYearInterestRateSlopeHigh(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setBorrowPerYearInterestRateSlopeLow(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setConfiguration(
      cometProxy: string,
      newConfiguration: CometConfiguration.ConfigurationStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setExtensionDelegate(
      cometProxy: string,
      newExtensionDelegate: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setFactory(
      cometProxy: string,
      newFactory: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setGovernor(
      cometProxy: string,
      newGovernor: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setPauseGuardian(
      cometProxy: string,
      newPauseGuardian: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setStoreFrontPriceFactor(
      cometProxy: string,
      newStoreFrontPriceFactor: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setSupplyKink(
      cometProxy: string,
      newSupplyKink: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setSupplyPerYearInterestRateBase(
      cometProxy: string,
      newBase: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setSupplyPerYearInterestRateSlopeHigh(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setSupplyPerYearInterestRateSlopeLow(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setTargetReserves(
      cometProxy: string,
      newTargetReserves: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    transferGovernor(
      newGovernor: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    updateAsset(
      cometProxy: string,
      newAssetConfig: CometConfiguration.AssetConfigStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    updateAssetBorrowCollateralFactor(
      cometProxy: string,
      asset: string,
      newBorrowCF: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    updateAssetLiquidateCollateralFactor(
      cometProxy: string,
      asset: string,
      newLiquidateCF: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    updateAssetLiquidationFactor(
      cometProxy: string,
      asset: string,
      newLiquidationFactor: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    updateAssetPriceFeed(
      cometProxy: string,
      asset: string,
      newPriceFeed: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    updateAssetSupplyCap(
      cometProxy: string,
      asset: string,
      newSupplyCap: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    version(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  addAsset(
    cometProxy: string,
    assetConfig: CometConfiguration.AssetConfigStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  deploy(
    cometProxy: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  factory(arg0: string, overrides?: CallOverrides): Promise<string>;

  getAssetIndex(
    cometProxy: string,
    asset: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getConfiguration(
    cometProxy: string,
    overrides?: CallOverrides
  ): Promise<CometConfiguration.ConfigurationStructOutput>;

  governor(overrides?: CallOverrides): Promise<string>;

  initialize(
    governor_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBaseBorrowMin(
    cometProxy: string,
    newBaseBorrowMin: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBaseMinForRewards(
    cometProxy: string,
    newBaseMinForRewards: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBaseTokenPriceFeed(
    cometProxy: string,
    newBaseTokenPriceFeed: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBaseTrackingBorrowSpeed(
    cometProxy: string,
    newBaseTrackingBorrowSpeed: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBaseTrackingSupplySpeed(
    cometProxy: string,
    newBaseTrackingSupplySpeed: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBorrowKink(
    cometProxy: string,
    newBorrowKink: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBorrowPerYearInterestRateBase(
    cometProxy: string,
    newBase: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBorrowPerYearInterestRateSlopeHigh(
    cometProxy: string,
    newSlope: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setBorrowPerYearInterestRateSlopeLow(
    cometProxy: string,
    newSlope: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setConfiguration(
    cometProxy: string,
    newConfiguration: CometConfiguration.ConfigurationStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setExtensionDelegate(
    cometProxy: string,
    newExtensionDelegate: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setFactory(
    cometProxy: string,
    newFactory: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setGovernor(
    cometProxy: string,
    newGovernor: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setPauseGuardian(
    cometProxy: string,
    newPauseGuardian: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setStoreFrontPriceFactor(
    cometProxy: string,
    newStoreFrontPriceFactor: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setSupplyKink(
    cometProxy: string,
    newSupplyKink: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setSupplyPerYearInterestRateBase(
    cometProxy: string,
    newBase: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setSupplyPerYearInterestRateSlopeHigh(
    cometProxy: string,
    newSlope: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setSupplyPerYearInterestRateSlopeLow(
    cometProxy: string,
    newSlope: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setTargetReserves(
    cometProxy: string,
    newTargetReserves: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  transferGovernor(
    newGovernor: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  updateAsset(
    cometProxy: string,
    newAssetConfig: CometConfiguration.AssetConfigStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  updateAssetBorrowCollateralFactor(
    cometProxy: string,
    asset: string,
    newBorrowCF: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  updateAssetLiquidateCollateralFactor(
    cometProxy: string,
    asset: string,
    newLiquidateCF: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  updateAssetLiquidationFactor(
    cometProxy: string,
    asset: string,
    newLiquidationFactor: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  updateAssetPriceFeed(
    cometProxy: string,
    asset: string,
    newPriceFeed: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  updateAssetSupplyCap(
    cometProxy: string,
    asset: string,
    newSupplyCap: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  version(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    addAsset(
      cometProxy: string,
      assetConfig: CometConfiguration.AssetConfigStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    deploy(cometProxy: string, overrides?: CallOverrides): Promise<string>;

    factory(arg0: string, overrides?: CallOverrides): Promise<string>;

    getAssetIndex(
      cometProxy: string,
      asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConfiguration(
      cometProxy: string,
      overrides?: CallOverrides
    ): Promise<CometConfiguration.ConfigurationStructOutput>;

    governor(overrides?: CallOverrides): Promise<string>;

    initialize(governor_: string, overrides?: CallOverrides): Promise<void>;

    setBaseBorrowMin(
      cometProxy: string,
      newBaseBorrowMin: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setBaseMinForRewards(
      cometProxy: string,
      newBaseMinForRewards: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setBaseTokenPriceFeed(
      cometProxy: string,
      newBaseTokenPriceFeed: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setBaseTrackingBorrowSpeed(
      cometProxy: string,
      newBaseTrackingBorrowSpeed: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setBaseTrackingSupplySpeed(
      cometProxy: string,
      newBaseTrackingSupplySpeed: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setBorrowKink(
      cometProxy: string,
      newBorrowKink: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setBorrowPerYearInterestRateBase(
      cometProxy: string,
      newBase: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setBorrowPerYearInterestRateSlopeHigh(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setBorrowPerYearInterestRateSlopeLow(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setConfiguration(
      cometProxy: string,
      newConfiguration: CometConfiguration.ConfigurationStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setExtensionDelegate(
      cometProxy: string,
      newExtensionDelegate: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setFactory(
      cometProxy: string,
      newFactory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setGovernor(
      cometProxy: string,
      newGovernor: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setPauseGuardian(
      cometProxy: string,
      newPauseGuardian: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setStoreFrontPriceFactor(
      cometProxy: string,
      newStoreFrontPriceFactor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setSupplyKink(
      cometProxy: string,
      newSupplyKink: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setSupplyPerYearInterestRateBase(
      cometProxy: string,
      newBase: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setSupplyPerYearInterestRateSlopeHigh(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setSupplyPerYearInterestRateSlopeLow(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setTargetReserves(
      cometProxy: string,
      newTargetReserves: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferGovernor(
      newGovernor: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateAsset(
      cometProxy: string,
      newAssetConfig: CometConfiguration.AssetConfigStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    updateAssetBorrowCollateralFactor(
      cometProxy: string,
      asset: string,
      newBorrowCF: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateAssetLiquidateCollateralFactor(
      cometProxy: string,
      asset: string,
      newLiquidateCF: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateAssetLiquidationFactor(
      cometProxy: string,
      asset: string,
      newLiquidationFactor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateAssetPriceFeed(
      cometProxy: string,
      asset: string,
      newPriceFeed: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateAssetSupplyCap(
      cometProxy: string,
      asset: string,
      newSupplyCap: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    version(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    "AddAsset(address,tuple)"(
      cometProxy?: string | null,
      assetConfig?: null
    ): AddAssetEventFilter;
    AddAsset(
      cometProxy?: string | null,
      assetConfig?: null
    ): AddAssetEventFilter;

    "CometDeployed(address,address)"(
      cometProxy?: string | null,
      newComet?: string | null
    ): CometDeployedEventFilter;
    CometDeployed(
      cometProxy?: string | null,
      newComet?: string | null
    ): CometDeployedEventFilter;

    "GovernorTransferred(address,address)"(
      oldGovernor?: string | null,
      newGovernor?: string | null
    ): GovernorTransferredEventFilter;
    GovernorTransferred(
      oldGovernor?: string | null,
      newGovernor?: string | null
    ): GovernorTransferredEventFilter;

    "SetBaseBorrowMin(address,uint104,uint104)"(
      cometProxy?: string | null,
      oldBaseBorrowMin?: null,
      newBaseBorrowMin?: null
    ): SetBaseBorrowMinEventFilter;
    SetBaseBorrowMin(
      cometProxy?: string | null,
      oldBaseBorrowMin?: null,
      newBaseBorrowMin?: null
    ): SetBaseBorrowMinEventFilter;

    "SetBaseMinForRewards(address,uint104,uint104)"(
      cometProxy?: string | null,
      oldBaseMinForRewards?: null,
      newBaseMinForRewards?: null
    ): SetBaseMinForRewardsEventFilter;
    SetBaseMinForRewards(
      cometProxy?: string | null,
      oldBaseMinForRewards?: null,
      newBaseMinForRewards?: null
    ): SetBaseMinForRewardsEventFilter;

    "SetBaseTokenPriceFeed(address,address,address)"(
      cometProxy?: string | null,
      oldBaseTokenPriceFeed?: string | null,
      newBaseTokenPriceFeed?: string | null
    ): SetBaseTokenPriceFeedEventFilter;
    SetBaseTokenPriceFeed(
      cometProxy?: string | null,
      oldBaseTokenPriceFeed?: string | null,
      newBaseTokenPriceFeed?: string | null
    ): SetBaseTokenPriceFeedEventFilter;

    "SetBaseTrackingBorrowSpeed(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldBaseTrackingBorrowSpeed?: null,
      newBaseTrackingBorrowSpeed?: null
    ): SetBaseTrackingBorrowSpeedEventFilter;
    SetBaseTrackingBorrowSpeed(
      cometProxy?: string | null,
      oldBaseTrackingBorrowSpeed?: null,
      newBaseTrackingBorrowSpeed?: null
    ): SetBaseTrackingBorrowSpeedEventFilter;

    "SetBaseTrackingSupplySpeed(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldBaseTrackingSupplySpeed?: null,
      newBaseTrackingSupplySpeed?: null
    ): SetBaseTrackingSupplySpeedEventFilter;
    SetBaseTrackingSupplySpeed(
      cometProxy?: string | null,
      oldBaseTrackingSupplySpeed?: null,
      newBaseTrackingSupplySpeed?: null
    ): SetBaseTrackingSupplySpeedEventFilter;

    "SetBorrowKink(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldKink?: null,
      newKink?: null
    ): SetBorrowKinkEventFilter;
    SetBorrowKink(
      cometProxy?: string | null,
      oldKink?: null,
      newKink?: null
    ): SetBorrowKinkEventFilter;

    "SetBorrowPerYearInterestRateBase(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldIRBase?: null,
      newIRBase?: null
    ): SetBorrowPerYearInterestRateBaseEventFilter;
    SetBorrowPerYearInterestRateBase(
      cometProxy?: string | null,
      oldIRBase?: null,
      newIRBase?: null
    ): SetBorrowPerYearInterestRateBaseEventFilter;

    "SetBorrowPerYearInterestRateSlopeHigh(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldIRSlopeHigh?: null,
      newIRSlopeHigh?: null
    ): SetBorrowPerYearInterestRateSlopeHighEventFilter;
    SetBorrowPerYearInterestRateSlopeHigh(
      cometProxy?: string | null,
      oldIRSlopeHigh?: null,
      newIRSlopeHigh?: null
    ): SetBorrowPerYearInterestRateSlopeHighEventFilter;

    "SetBorrowPerYearInterestRateSlopeLow(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldIRSlopeLow?: null,
      newIRSlopeLow?: null
    ): SetBorrowPerYearInterestRateSlopeLowEventFilter;
    SetBorrowPerYearInterestRateSlopeLow(
      cometProxy?: string | null,
      oldIRSlopeLow?: null,
      newIRSlopeLow?: null
    ): SetBorrowPerYearInterestRateSlopeLowEventFilter;

    "SetConfiguration(address,tuple,tuple)"(
      cometProxy?: string | null,
      oldConfiguration?: null,
      newConfiguration?: null
    ): SetConfigurationEventFilter;
    SetConfiguration(
      cometProxy?: string | null,
      oldConfiguration?: null,
      newConfiguration?: null
    ): SetConfigurationEventFilter;

    "SetExtensionDelegate(address,address,address)"(
      cometProxy?: string | null,
      oldExt?: string | null,
      newExt?: string | null
    ): SetExtensionDelegateEventFilter;
    SetExtensionDelegate(
      cometProxy?: string | null,
      oldExt?: string | null,
      newExt?: string | null
    ): SetExtensionDelegateEventFilter;

    "SetFactory(address,address,address)"(
      cometProxy?: string | null,
      oldFactory?: string | null,
      newFactory?: string | null
    ): SetFactoryEventFilter;
    SetFactory(
      cometProxy?: string | null,
      oldFactory?: string | null,
      newFactory?: string | null
    ): SetFactoryEventFilter;

    "SetGovernor(address,address,address)"(
      cometProxy?: string | null,
      oldGovernor?: string | null,
      newGovernor?: string | null
    ): SetGovernorEventFilter;
    SetGovernor(
      cometProxy?: string | null,
      oldGovernor?: string | null,
      newGovernor?: string | null
    ): SetGovernorEventFilter;

    "SetPauseGuardian(address,address,address)"(
      cometProxy?: string | null,
      oldPauseGuardian?: string | null,
      newPauseGuardian?: string | null
    ): SetPauseGuardianEventFilter;
    SetPauseGuardian(
      cometProxy?: string | null,
      oldPauseGuardian?: string | null,
      newPauseGuardian?: string | null
    ): SetPauseGuardianEventFilter;

    "SetStoreFrontPriceFactor(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldStoreFrontPriceFactor?: null,
      newStoreFrontPriceFactor?: null
    ): SetStoreFrontPriceFactorEventFilter;
    SetStoreFrontPriceFactor(
      cometProxy?: string | null,
      oldStoreFrontPriceFactor?: null,
      newStoreFrontPriceFactor?: null
    ): SetStoreFrontPriceFactorEventFilter;

    "SetSupplyKink(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldKink?: null,
      newKink?: null
    ): SetSupplyKinkEventFilter;
    SetSupplyKink(
      cometProxy?: string | null,
      oldKink?: null,
      newKink?: null
    ): SetSupplyKinkEventFilter;

    "SetSupplyPerYearInterestRateBase(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldIRBase?: null,
      newIRBase?: null
    ): SetSupplyPerYearInterestRateBaseEventFilter;
    SetSupplyPerYearInterestRateBase(
      cometProxy?: string | null,
      oldIRBase?: null,
      newIRBase?: null
    ): SetSupplyPerYearInterestRateBaseEventFilter;

    "SetSupplyPerYearInterestRateSlopeHigh(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldIRSlopeHigh?: null,
      newIRSlopeHigh?: null
    ): SetSupplyPerYearInterestRateSlopeHighEventFilter;
    SetSupplyPerYearInterestRateSlopeHigh(
      cometProxy?: string | null,
      oldIRSlopeHigh?: null,
      newIRSlopeHigh?: null
    ): SetSupplyPerYearInterestRateSlopeHighEventFilter;

    "SetSupplyPerYearInterestRateSlopeLow(address,uint64,uint64)"(
      cometProxy?: string | null,
      oldIRSlopeLow?: null,
      newIRSlopeLow?: null
    ): SetSupplyPerYearInterestRateSlopeLowEventFilter;
    SetSupplyPerYearInterestRateSlopeLow(
      cometProxy?: string | null,
      oldIRSlopeLow?: null,
      newIRSlopeLow?: null
    ): SetSupplyPerYearInterestRateSlopeLowEventFilter;

    "SetTargetReserves(address,uint104,uint104)"(
      cometProxy?: string | null,
      oldTargetReserves?: null,
      newTargetReserves?: null
    ): SetTargetReservesEventFilter;
    SetTargetReserves(
      cometProxy?: string | null,
      oldTargetReserves?: null,
      newTargetReserves?: null
    ): SetTargetReservesEventFilter;

    "UpdateAsset(address,tuple,tuple)"(
      cometProxy?: string | null,
      oldAssetConfig?: null,
      newAssetConfig?: null
    ): UpdateAssetEventFilter;
    UpdateAsset(
      cometProxy?: string | null,
      oldAssetConfig?: null,
      newAssetConfig?: null
    ): UpdateAssetEventFilter;

    "UpdateAssetBorrowCollateralFactor(address,address,uint64,uint64)"(
      cometProxy?: string | null,
      asset?: string | null,
      oldBorrowCF?: null,
      newBorrowCF?: null
    ): UpdateAssetBorrowCollateralFactorEventFilter;
    UpdateAssetBorrowCollateralFactor(
      cometProxy?: string | null,
      asset?: string | null,
      oldBorrowCF?: null,
      newBorrowCF?: null
    ): UpdateAssetBorrowCollateralFactorEventFilter;

    "UpdateAssetLiquidateCollateralFactor(address,address,uint64,uint64)"(
      cometProxy?: string | null,
      asset?: string | null,
      oldLiquidateCF?: null,
      newLiquidateCF?: null
    ): UpdateAssetLiquidateCollateralFactorEventFilter;
    UpdateAssetLiquidateCollateralFactor(
      cometProxy?: string | null,
      asset?: string | null,
      oldLiquidateCF?: null,
      newLiquidateCF?: null
    ): UpdateAssetLiquidateCollateralFactorEventFilter;

    "UpdateAssetLiquidationFactor(address,address,uint64,uint64)"(
      cometProxy?: string | null,
      asset?: string | null,
      oldLiquidationFactor?: null,
      newLiquidationFactor?: null
    ): UpdateAssetLiquidationFactorEventFilter;
    UpdateAssetLiquidationFactor(
      cometProxy?: string | null,
      asset?: string | null,
      oldLiquidationFactor?: null,
      newLiquidationFactor?: null
    ): UpdateAssetLiquidationFactorEventFilter;

    "UpdateAssetPriceFeed(address,address,address,address)"(
      cometProxy?: string | null,
      asset?: string | null,
      oldPriceFeed?: null,
      newPriceFeed?: null
    ): UpdateAssetPriceFeedEventFilter;
    UpdateAssetPriceFeed(
      cometProxy?: string | null,
      asset?: string | null,
      oldPriceFeed?: null,
      newPriceFeed?: null
    ): UpdateAssetPriceFeedEventFilter;

    "UpdateAssetSupplyCap(address,address,uint128,uint128)"(
      cometProxy?: string | null,
      asset?: string | null,
      oldSupplyCap?: null,
      newSupplyCap?: null
    ): UpdateAssetSupplyCapEventFilter;
    UpdateAssetSupplyCap(
      cometProxy?: string | null,
      asset?: string | null,
      oldSupplyCap?: null,
      newSupplyCap?: null
    ): UpdateAssetSupplyCapEventFilter;
  };

  estimateGas: {
    addAsset(
      cometProxy: string,
      assetConfig: CometConfiguration.AssetConfigStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    deploy(
      cometProxy: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    factory(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    getAssetIndex(
      cometProxy: string,
      asset: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConfiguration(
      cometProxy: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    governor(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      governor_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBaseBorrowMin(
      cometProxy: string,
      newBaseBorrowMin: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBaseMinForRewards(
      cometProxy: string,
      newBaseMinForRewards: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBaseTokenPriceFeed(
      cometProxy: string,
      newBaseTokenPriceFeed: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBaseTrackingBorrowSpeed(
      cometProxy: string,
      newBaseTrackingBorrowSpeed: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBaseTrackingSupplySpeed(
      cometProxy: string,
      newBaseTrackingSupplySpeed: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBorrowKink(
      cometProxy: string,
      newBorrowKink: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBorrowPerYearInterestRateBase(
      cometProxy: string,
      newBase: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBorrowPerYearInterestRateSlopeHigh(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setBorrowPerYearInterestRateSlopeLow(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setConfiguration(
      cometProxy: string,
      newConfiguration: CometConfiguration.ConfigurationStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setExtensionDelegate(
      cometProxy: string,
      newExtensionDelegate: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setFactory(
      cometProxy: string,
      newFactory: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setGovernor(
      cometProxy: string,
      newGovernor: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setPauseGuardian(
      cometProxy: string,
      newPauseGuardian: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setStoreFrontPriceFactor(
      cometProxy: string,
      newStoreFrontPriceFactor: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setSupplyKink(
      cometProxy: string,
      newSupplyKink: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setSupplyPerYearInterestRateBase(
      cometProxy: string,
      newBase: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setSupplyPerYearInterestRateSlopeHigh(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setSupplyPerYearInterestRateSlopeLow(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setTargetReserves(
      cometProxy: string,
      newTargetReserves: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    transferGovernor(
      newGovernor: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    updateAsset(
      cometProxy: string,
      newAssetConfig: CometConfiguration.AssetConfigStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    updateAssetBorrowCollateralFactor(
      cometProxy: string,
      asset: string,
      newBorrowCF: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    updateAssetLiquidateCollateralFactor(
      cometProxy: string,
      asset: string,
      newLiquidateCF: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    updateAssetLiquidationFactor(
      cometProxy: string,
      asset: string,
      newLiquidationFactor: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    updateAssetPriceFeed(
      cometProxy: string,
      asset: string,
      newPriceFeed: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    updateAssetSupplyCap(
      cometProxy: string,
      asset: string,
      newSupplyCap: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    version(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    addAsset(
      cometProxy: string,
      assetConfig: CometConfiguration.AssetConfigStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    deploy(
      cometProxy: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    factory(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAssetIndex(
      cometProxy: string,
      asset: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getConfiguration(
      cometProxy: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    governor(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(
      governor_: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBaseBorrowMin(
      cometProxy: string,
      newBaseBorrowMin: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBaseMinForRewards(
      cometProxy: string,
      newBaseMinForRewards: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBaseTokenPriceFeed(
      cometProxy: string,
      newBaseTokenPriceFeed: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBaseTrackingBorrowSpeed(
      cometProxy: string,
      newBaseTrackingBorrowSpeed: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBaseTrackingSupplySpeed(
      cometProxy: string,
      newBaseTrackingSupplySpeed: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBorrowKink(
      cometProxy: string,
      newBorrowKink: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBorrowPerYearInterestRateBase(
      cometProxy: string,
      newBase: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBorrowPerYearInterestRateSlopeHigh(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setBorrowPerYearInterestRateSlopeLow(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setConfiguration(
      cometProxy: string,
      newConfiguration: CometConfiguration.ConfigurationStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setExtensionDelegate(
      cometProxy: string,
      newExtensionDelegate: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setFactory(
      cometProxy: string,
      newFactory: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setGovernor(
      cometProxy: string,
      newGovernor: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setPauseGuardian(
      cometProxy: string,
      newPauseGuardian: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setStoreFrontPriceFactor(
      cometProxy: string,
      newStoreFrontPriceFactor: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setSupplyKink(
      cometProxy: string,
      newSupplyKink: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setSupplyPerYearInterestRateBase(
      cometProxy: string,
      newBase: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setSupplyPerYearInterestRateSlopeHigh(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setSupplyPerYearInterestRateSlopeLow(
      cometProxy: string,
      newSlope: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setTargetReserves(
      cometProxy: string,
      newTargetReserves: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    transferGovernor(
      newGovernor: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    updateAsset(
      cometProxy: string,
      newAssetConfig: CometConfiguration.AssetConfigStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    updateAssetBorrowCollateralFactor(
      cometProxy: string,
      asset: string,
      newBorrowCF: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    updateAssetLiquidateCollateralFactor(
      cometProxy: string,
      asset: string,
      newLiquidateCF: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    updateAssetLiquidationFactor(
      cometProxy: string,
      asset: string,
      newLiquidationFactor: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    updateAssetPriceFeed(
      cometProxy: string,
      asset: string,
      newPriceFeed: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    updateAssetSupplyCap(
      cometProxy: string,
      asset: string,
      newSupplyCap: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    version(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
