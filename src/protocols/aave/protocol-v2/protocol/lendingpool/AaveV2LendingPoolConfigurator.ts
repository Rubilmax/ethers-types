/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../../../../common";

export declare namespace ILendingPoolConfigurator {
  export type InitReserveInputStruct = {
    aTokenImpl: AddressLike;
    stableDebtTokenImpl: AddressLike;
    variableDebtTokenImpl: AddressLike;
    underlyingAssetDecimals: BigNumberish;
    interestRateStrategyAddress: AddressLike;
    underlyingAsset: AddressLike;
    treasury: AddressLike;
    incentivesController: AddressLike;
    underlyingAssetName: string;
    aTokenName: string;
    aTokenSymbol: string;
    variableDebtTokenName: string;
    variableDebtTokenSymbol: string;
    stableDebtTokenName: string;
    stableDebtTokenSymbol: string;
    params: BytesLike;
  };

  export type InitReserveInputStructOutput = [
    aTokenImpl: string,
    stableDebtTokenImpl: string,
    variableDebtTokenImpl: string,
    underlyingAssetDecimals: bigint,
    interestRateStrategyAddress: string,
    underlyingAsset: string,
    treasury: string,
    incentivesController: string,
    underlyingAssetName: string,
    aTokenName: string,
    aTokenSymbol: string,
    variableDebtTokenName: string,
    variableDebtTokenSymbol: string,
    stableDebtTokenName: string,
    stableDebtTokenSymbol: string,
    params: string
  ] & {
    aTokenImpl: string;
    stableDebtTokenImpl: string;
    variableDebtTokenImpl: string;
    underlyingAssetDecimals: bigint;
    interestRateStrategyAddress: string;
    underlyingAsset: string;
    treasury: string;
    incentivesController: string;
    underlyingAssetName: string;
    aTokenName: string;
    aTokenSymbol: string;
    variableDebtTokenName: string;
    variableDebtTokenSymbol: string;
    stableDebtTokenName: string;
    stableDebtTokenSymbol: string;
    params: string;
  };

  export type UpdateATokenInputStruct = {
    asset: AddressLike;
    treasury: AddressLike;
    incentivesController: AddressLike;
    name: string;
    symbol: string;
    implementation: AddressLike;
    params: BytesLike;
  };

  export type UpdateATokenInputStructOutput = [
    asset: string,
    treasury: string,
    incentivesController: string,
    name: string,
    symbol: string,
    implementation: string,
    params: string
  ] & {
    asset: string;
    treasury: string;
    incentivesController: string;
    name: string;
    symbol: string;
    implementation: string;
    params: string;
  };

  export type UpdateDebtTokenInputStruct = {
    asset: AddressLike;
    incentivesController: AddressLike;
    name: string;
    symbol: string;
    implementation: AddressLike;
    params: BytesLike;
  };

  export type UpdateDebtTokenInputStructOutput = [
    asset: string,
    incentivesController: string,
    name: string,
    symbol: string,
    implementation: string,
    params: string
  ] & {
    asset: string;
    incentivesController: string;
    name: string;
    symbol: string;
    implementation: string;
    params: string;
  };
}

export interface AaveV2LendingPoolConfiguratorInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "activateReserve"
      | "batchInitReserve"
      | "configureReserveAsCollateral"
      | "deactivateReserve"
      | "disableBorrowingOnReserve"
      | "disableReserveStableRate"
      | "enableBorrowingOnReserve"
      | "enableReserveStableRate"
      | "freezeReserve"
      | "initialize"
      | "setPoolPause"
      | "setReserveFactor"
      | "setReserveInterestRateStrategyAddress"
      | "unfreezeReserve"
      | "updateAToken"
      | "updateStableDebtToken"
      | "updateVariableDebtToken"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "ATokenUpgraded"
      | "BorrowingDisabledOnReserve"
      | "BorrowingEnabledOnReserve"
      | "CollateralConfigurationChanged"
      | "ReserveActivated"
      | "ReserveDeactivated"
      | "ReserveDecimalsChanged"
      | "ReserveFactorChanged"
      | "ReserveFrozen"
      | "ReserveInitialized"
      | "ReserveInterestRateStrategyChanged"
      | "ReserveUnfrozen"
      | "StableDebtTokenUpgraded"
      | "StableRateDisabledOnReserve"
      | "StableRateEnabledOnReserve"
      | "VariableDebtTokenUpgraded"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "activateReserve",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "batchInitReserve",
    values: [ILendingPoolConfigurator.InitReserveInputStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "configureReserveAsCollateral",
    values: [AddressLike, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deactivateReserve",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "disableBorrowingOnReserve",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "disableReserveStableRate",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "enableBorrowingOnReserve",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "enableReserveStableRate",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "freezeReserve",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setPoolPause",
    values: [boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveFactor",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveInterestRateStrategyAddress",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unfreezeReserve",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAToken",
    values: [ILendingPoolConfigurator.UpdateATokenInputStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "updateStableDebtToken",
    values: [ILendingPoolConfigurator.UpdateDebtTokenInputStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "updateVariableDebtToken",
    values: [ILendingPoolConfigurator.UpdateDebtTokenInputStruct]
  ): string;

  decodeFunctionResult(
    functionFragment: "activateReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchInitReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "configureReserveAsCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deactivateReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableBorrowingOnReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disableReserveStableRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableBorrowingOnReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enableReserveStableRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "freezeReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setPoolPause",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveInterestRateStrategyAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unfreezeReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStableDebtToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateVariableDebtToken",
    data: BytesLike
  ): Result;
}

export namespace ATokenUpgradedEvent {
  export type InputTuple = [
    asset: AddressLike,
    proxy: AddressLike,
    implementation: AddressLike
  ];
  export type OutputTuple = [
    asset: string,
    proxy: string,
    implementation: string
  ];
  export interface OutputObject {
    asset: string;
    proxy: string;
    implementation: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BorrowingDisabledOnReserveEvent {
  export type InputTuple = [asset: AddressLike];
  export type OutputTuple = [asset: string];
  export interface OutputObject {
    asset: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BorrowingEnabledOnReserveEvent {
  export type InputTuple = [asset: AddressLike, stableRateEnabled: boolean];
  export type OutputTuple = [asset: string, stableRateEnabled: boolean];
  export interface OutputObject {
    asset: string;
    stableRateEnabled: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CollateralConfigurationChangedEvent {
  export type InputTuple = [
    asset: AddressLike,
    ltv: BigNumberish,
    liquidationThreshold: BigNumberish,
    liquidationBonus: BigNumberish
  ];
  export type OutputTuple = [
    asset: string,
    ltv: bigint,
    liquidationThreshold: bigint,
    liquidationBonus: bigint
  ];
  export interface OutputObject {
    asset: string;
    ltv: bigint;
    liquidationThreshold: bigint;
    liquidationBonus: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ReserveActivatedEvent {
  export type InputTuple = [asset: AddressLike];
  export type OutputTuple = [asset: string];
  export interface OutputObject {
    asset: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ReserveDeactivatedEvent {
  export type InputTuple = [asset: AddressLike];
  export type OutputTuple = [asset: string];
  export interface OutputObject {
    asset: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ReserveDecimalsChangedEvent {
  export type InputTuple = [asset: AddressLike, decimals: BigNumberish];
  export type OutputTuple = [asset: string, decimals: bigint];
  export interface OutputObject {
    asset: string;
    decimals: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ReserveFactorChangedEvent {
  export type InputTuple = [asset: AddressLike, factor: BigNumberish];
  export type OutputTuple = [asset: string, factor: bigint];
  export interface OutputObject {
    asset: string;
    factor: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ReserveFrozenEvent {
  export type InputTuple = [asset: AddressLike];
  export type OutputTuple = [asset: string];
  export interface OutputObject {
    asset: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ReserveInitializedEvent {
  export type InputTuple = [
    asset: AddressLike,
    aToken: AddressLike,
    stableDebtToken: AddressLike,
    variableDebtToken: AddressLike,
    interestRateStrategyAddress: AddressLike
  ];
  export type OutputTuple = [
    asset: string,
    aToken: string,
    stableDebtToken: string,
    variableDebtToken: string,
    interestRateStrategyAddress: string
  ];
  export interface OutputObject {
    asset: string;
    aToken: string;
    stableDebtToken: string;
    variableDebtToken: string;
    interestRateStrategyAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ReserveInterestRateStrategyChangedEvent {
  export type InputTuple = [asset: AddressLike, strategy: AddressLike];
  export type OutputTuple = [asset: string, strategy: string];
  export interface OutputObject {
    asset: string;
    strategy: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ReserveUnfrozenEvent {
  export type InputTuple = [asset: AddressLike];
  export type OutputTuple = [asset: string];
  export interface OutputObject {
    asset: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace StableDebtTokenUpgradedEvent {
  export type InputTuple = [
    asset: AddressLike,
    proxy: AddressLike,
    implementation: AddressLike
  ];
  export type OutputTuple = [
    asset: string,
    proxy: string,
    implementation: string
  ];
  export interface OutputObject {
    asset: string;
    proxy: string;
    implementation: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace StableRateDisabledOnReserveEvent {
  export type InputTuple = [asset: AddressLike];
  export type OutputTuple = [asset: string];
  export interface OutputObject {
    asset: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace StableRateEnabledOnReserveEvent {
  export type InputTuple = [asset: AddressLike];
  export type OutputTuple = [asset: string];
  export interface OutputObject {
    asset: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace VariableDebtTokenUpgradedEvent {
  export type InputTuple = [
    asset: AddressLike,
    proxy: AddressLike,
    implementation: AddressLike
  ];
  export type OutputTuple = [
    asset: string,
    proxy: string,
    implementation: string
  ];
  export interface OutputObject {
    asset: string;
    proxy: string;
    implementation: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface AaveV2LendingPoolConfigurator extends BaseContract {
  connect(runner?: ContractRunner | null): AaveV2LendingPoolConfigurator;
  waitForDeployment(): Promise<this>;

  interface: AaveV2LendingPoolConfiguratorInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  activateReserve: TypedContractMethod<
    [asset: AddressLike],
    [void],
    "nonpayable"
  >;

  batchInitReserve: TypedContractMethod<
    [input: ILendingPoolConfigurator.InitReserveInputStruct[]],
    [void],
    "nonpayable"
  >;

  configureReserveAsCollateral: TypedContractMethod<
    [
      asset: AddressLike,
      ltv: BigNumberish,
      liquidationThreshold: BigNumberish,
      liquidationBonus: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  deactivateReserve: TypedContractMethod<
    [asset: AddressLike],
    [void],
    "nonpayable"
  >;

  disableBorrowingOnReserve: TypedContractMethod<
    [asset: AddressLike],
    [void],
    "nonpayable"
  >;

  disableReserveStableRate: TypedContractMethod<
    [asset: AddressLike],
    [void],
    "nonpayable"
  >;

  enableBorrowingOnReserve: TypedContractMethod<
    [asset: AddressLike, stableBorrowRateEnabled: boolean],
    [void],
    "nonpayable"
  >;

  enableReserveStableRate: TypedContractMethod<
    [asset: AddressLike],
    [void],
    "nonpayable"
  >;

  freezeReserve: TypedContractMethod<
    [asset: AddressLike],
    [void],
    "nonpayable"
  >;

  initialize: TypedContractMethod<
    [provider: AddressLike],
    [void],
    "nonpayable"
  >;

  setPoolPause: TypedContractMethod<[val: boolean], [void], "nonpayable">;

  setReserveFactor: TypedContractMethod<
    [asset: AddressLike, reserveFactor: BigNumberish],
    [void],
    "nonpayable"
  >;

  setReserveInterestRateStrategyAddress: TypedContractMethod<
    [asset: AddressLike, rateStrategyAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  unfreezeReserve: TypedContractMethod<
    [asset: AddressLike],
    [void],
    "nonpayable"
  >;

  updateAToken: TypedContractMethod<
    [input: ILendingPoolConfigurator.UpdateATokenInputStruct],
    [void],
    "nonpayable"
  >;

  updateStableDebtToken: TypedContractMethod<
    [input: ILendingPoolConfigurator.UpdateDebtTokenInputStruct],
    [void],
    "nonpayable"
  >;

  updateVariableDebtToken: TypedContractMethod<
    [input: ILendingPoolConfigurator.UpdateDebtTokenInputStruct],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "activateReserve"
  ): TypedContractMethod<[asset: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "batchInitReserve"
  ): TypedContractMethod<
    [input: ILendingPoolConfigurator.InitReserveInputStruct[]],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "configureReserveAsCollateral"
  ): TypedContractMethod<
    [
      asset: AddressLike,
      ltv: BigNumberish,
      liquidationThreshold: BigNumberish,
      liquidationBonus: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "deactivateReserve"
  ): TypedContractMethod<[asset: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "disableBorrowingOnReserve"
  ): TypedContractMethod<[asset: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "disableReserveStableRate"
  ): TypedContractMethod<[asset: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "enableBorrowingOnReserve"
  ): TypedContractMethod<
    [asset: AddressLike, stableBorrowRateEnabled: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "enableReserveStableRate"
  ): TypedContractMethod<[asset: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "freezeReserve"
  ): TypedContractMethod<[asset: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<[provider: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setPoolPause"
  ): TypedContractMethod<[val: boolean], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setReserveFactor"
  ): TypedContractMethod<
    [asset: AddressLike, reserveFactor: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setReserveInterestRateStrategyAddress"
  ): TypedContractMethod<
    [asset: AddressLike, rateStrategyAddress: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "unfreezeReserve"
  ): TypedContractMethod<[asset: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "updateAToken"
  ): TypedContractMethod<
    [input: ILendingPoolConfigurator.UpdateATokenInputStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateStableDebtToken"
  ): TypedContractMethod<
    [input: ILendingPoolConfigurator.UpdateDebtTokenInputStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateVariableDebtToken"
  ): TypedContractMethod<
    [input: ILendingPoolConfigurator.UpdateDebtTokenInputStruct],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "ATokenUpgraded"
  ): TypedContractEvent<
    ATokenUpgradedEvent.InputTuple,
    ATokenUpgradedEvent.OutputTuple,
    ATokenUpgradedEvent.OutputObject
  >;
  getEvent(
    key: "BorrowingDisabledOnReserve"
  ): TypedContractEvent<
    BorrowingDisabledOnReserveEvent.InputTuple,
    BorrowingDisabledOnReserveEvent.OutputTuple,
    BorrowingDisabledOnReserveEvent.OutputObject
  >;
  getEvent(
    key: "BorrowingEnabledOnReserve"
  ): TypedContractEvent<
    BorrowingEnabledOnReserveEvent.InputTuple,
    BorrowingEnabledOnReserveEvent.OutputTuple,
    BorrowingEnabledOnReserveEvent.OutputObject
  >;
  getEvent(
    key: "CollateralConfigurationChanged"
  ): TypedContractEvent<
    CollateralConfigurationChangedEvent.InputTuple,
    CollateralConfigurationChangedEvent.OutputTuple,
    CollateralConfigurationChangedEvent.OutputObject
  >;
  getEvent(
    key: "ReserveActivated"
  ): TypedContractEvent<
    ReserveActivatedEvent.InputTuple,
    ReserveActivatedEvent.OutputTuple,
    ReserveActivatedEvent.OutputObject
  >;
  getEvent(
    key: "ReserveDeactivated"
  ): TypedContractEvent<
    ReserveDeactivatedEvent.InputTuple,
    ReserveDeactivatedEvent.OutputTuple,
    ReserveDeactivatedEvent.OutputObject
  >;
  getEvent(
    key: "ReserveDecimalsChanged"
  ): TypedContractEvent<
    ReserveDecimalsChangedEvent.InputTuple,
    ReserveDecimalsChangedEvent.OutputTuple,
    ReserveDecimalsChangedEvent.OutputObject
  >;
  getEvent(
    key: "ReserveFactorChanged"
  ): TypedContractEvent<
    ReserveFactorChangedEvent.InputTuple,
    ReserveFactorChangedEvent.OutputTuple,
    ReserveFactorChangedEvent.OutputObject
  >;
  getEvent(
    key: "ReserveFrozen"
  ): TypedContractEvent<
    ReserveFrozenEvent.InputTuple,
    ReserveFrozenEvent.OutputTuple,
    ReserveFrozenEvent.OutputObject
  >;
  getEvent(
    key: "ReserveInitialized"
  ): TypedContractEvent<
    ReserveInitializedEvent.InputTuple,
    ReserveInitializedEvent.OutputTuple,
    ReserveInitializedEvent.OutputObject
  >;
  getEvent(
    key: "ReserveInterestRateStrategyChanged"
  ): TypedContractEvent<
    ReserveInterestRateStrategyChangedEvent.InputTuple,
    ReserveInterestRateStrategyChangedEvent.OutputTuple,
    ReserveInterestRateStrategyChangedEvent.OutputObject
  >;
  getEvent(
    key: "ReserveUnfrozen"
  ): TypedContractEvent<
    ReserveUnfrozenEvent.InputTuple,
    ReserveUnfrozenEvent.OutputTuple,
    ReserveUnfrozenEvent.OutputObject
  >;
  getEvent(
    key: "StableDebtTokenUpgraded"
  ): TypedContractEvent<
    StableDebtTokenUpgradedEvent.InputTuple,
    StableDebtTokenUpgradedEvent.OutputTuple,
    StableDebtTokenUpgradedEvent.OutputObject
  >;
  getEvent(
    key: "StableRateDisabledOnReserve"
  ): TypedContractEvent<
    StableRateDisabledOnReserveEvent.InputTuple,
    StableRateDisabledOnReserveEvent.OutputTuple,
    StableRateDisabledOnReserveEvent.OutputObject
  >;
  getEvent(
    key: "StableRateEnabledOnReserve"
  ): TypedContractEvent<
    StableRateEnabledOnReserveEvent.InputTuple,
    StableRateEnabledOnReserveEvent.OutputTuple,
    StableRateEnabledOnReserveEvent.OutputObject
  >;
  getEvent(
    key: "VariableDebtTokenUpgraded"
  ): TypedContractEvent<
    VariableDebtTokenUpgradedEvent.InputTuple,
    VariableDebtTokenUpgradedEvent.OutputTuple,
    VariableDebtTokenUpgradedEvent.OutputObject
  >;

  filters: {
    "ATokenUpgraded(address,address,address)": TypedContractEvent<
      ATokenUpgradedEvent.InputTuple,
      ATokenUpgradedEvent.OutputTuple,
      ATokenUpgradedEvent.OutputObject
    >;
    ATokenUpgraded: TypedContractEvent<
      ATokenUpgradedEvent.InputTuple,
      ATokenUpgradedEvent.OutputTuple,
      ATokenUpgradedEvent.OutputObject
    >;

    "BorrowingDisabledOnReserve(address)": TypedContractEvent<
      BorrowingDisabledOnReserveEvent.InputTuple,
      BorrowingDisabledOnReserveEvent.OutputTuple,
      BorrowingDisabledOnReserveEvent.OutputObject
    >;
    BorrowingDisabledOnReserve: TypedContractEvent<
      BorrowingDisabledOnReserveEvent.InputTuple,
      BorrowingDisabledOnReserveEvent.OutputTuple,
      BorrowingDisabledOnReserveEvent.OutputObject
    >;

    "BorrowingEnabledOnReserve(address,bool)": TypedContractEvent<
      BorrowingEnabledOnReserveEvent.InputTuple,
      BorrowingEnabledOnReserveEvent.OutputTuple,
      BorrowingEnabledOnReserveEvent.OutputObject
    >;
    BorrowingEnabledOnReserve: TypedContractEvent<
      BorrowingEnabledOnReserveEvent.InputTuple,
      BorrowingEnabledOnReserveEvent.OutputTuple,
      BorrowingEnabledOnReserveEvent.OutputObject
    >;

    "CollateralConfigurationChanged(address,uint256,uint256,uint256)": TypedContractEvent<
      CollateralConfigurationChangedEvent.InputTuple,
      CollateralConfigurationChangedEvent.OutputTuple,
      CollateralConfigurationChangedEvent.OutputObject
    >;
    CollateralConfigurationChanged: TypedContractEvent<
      CollateralConfigurationChangedEvent.InputTuple,
      CollateralConfigurationChangedEvent.OutputTuple,
      CollateralConfigurationChangedEvent.OutputObject
    >;

    "ReserveActivated(address)": TypedContractEvent<
      ReserveActivatedEvent.InputTuple,
      ReserveActivatedEvent.OutputTuple,
      ReserveActivatedEvent.OutputObject
    >;
    ReserveActivated: TypedContractEvent<
      ReserveActivatedEvent.InputTuple,
      ReserveActivatedEvent.OutputTuple,
      ReserveActivatedEvent.OutputObject
    >;

    "ReserveDeactivated(address)": TypedContractEvent<
      ReserveDeactivatedEvent.InputTuple,
      ReserveDeactivatedEvent.OutputTuple,
      ReserveDeactivatedEvent.OutputObject
    >;
    ReserveDeactivated: TypedContractEvent<
      ReserveDeactivatedEvent.InputTuple,
      ReserveDeactivatedEvent.OutputTuple,
      ReserveDeactivatedEvent.OutputObject
    >;

    "ReserveDecimalsChanged(address,uint256)": TypedContractEvent<
      ReserveDecimalsChangedEvent.InputTuple,
      ReserveDecimalsChangedEvent.OutputTuple,
      ReserveDecimalsChangedEvent.OutputObject
    >;
    ReserveDecimalsChanged: TypedContractEvent<
      ReserveDecimalsChangedEvent.InputTuple,
      ReserveDecimalsChangedEvent.OutputTuple,
      ReserveDecimalsChangedEvent.OutputObject
    >;

    "ReserveFactorChanged(address,uint256)": TypedContractEvent<
      ReserveFactorChangedEvent.InputTuple,
      ReserveFactorChangedEvent.OutputTuple,
      ReserveFactorChangedEvent.OutputObject
    >;
    ReserveFactorChanged: TypedContractEvent<
      ReserveFactorChangedEvent.InputTuple,
      ReserveFactorChangedEvent.OutputTuple,
      ReserveFactorChangedEvent.OutputObject
    >;

    "ReserveFrozen(address)": TypedContractEvent<
      ReserveFrozenEvent.InputTuple,
      ReserveFrozenEvent.OutputTuple,
      ReserveFrozenEvent.OutputObject
    >;
    ReserveFrozen: TypedContractEvent<
      ReserveFrozenEvent.InputTuple,
      ReserveFrozenEvent.OutputTuple,
      ReserveFrozenEvent.OutputObject
    >;

    "ReserveInitialized(address,address,address,address,address)": TypedContractEvent<
      ReserveInitializedEvent.InputTuple,
      ReserveInitializedEvent.OutputTuple,
      ReserveInitializedEvent.OutputObject
    >;
    ReserveInitialized: TypedContractEvent<
      ReserveInitializedEvent.InputTuple,
      ReserveInitializedEvent.OutputTuple,
      ReserveInitializedEvent.OutputObject
    >;

    "ReserveInterestRateStrategyChanged(address,address)": TypedContractEvent<
      ReserveInterestRateStrategyChangedEvent.InputTuple,
      ReserveInterestRateStrategyChangedEvent.OutputTuple,
      ReserveInterestRateStrategyChangedEvent.OutputObject
    >;
    ReserveInterestRateStrategyChanged: TypedContractEvent<
      ReserveInterestRateStrategyChangedEvent.InputTuple,
      ReserveInterestRateStrategyChangedEvent.OutputTuple,
      ReserveInterestRateStrategyChangedEvent.OutputObject
    >;

    "ReserveUnfrozen(address)": TypedContractEvent<
      ReserveUnfrozenEvent.InputTuple,
      ReserveUnfrozenEvent.OutputTuple,
      ReserveUnfrozenEvent.OutputObject
    >;
    ReserveUnfrozen: TypedContractEvent<
      ReserveUnfrozenEvent.InputTuple,
      ReserveUnfrozenEvent.OutputTuple,
      ReserveUnfrozenEvent.OutputObject
    >;

    "StableDebtTokenUpgraded(address,address,address)": TypedContractEvent<
      StableDebtTokenUpgradedEvent.InputTuple,
      StableDebtTokenUpgradedEvent.OutputTuple,
      StableDebtTokenUpgradedEvent.OutputObject
    >;
    StableDebtTokenUpgraded: TypedContractEvent<
      StableDebtTokenUpgradedEvent.InputTuple,
      StableDebtTokenUpgradedEvent.OutputTuple,
      StableDebtTokenUpgradedEvent.OutputObject
    >;

    "StableRateDisabledOnReserve(address)": TypedContractEvent<
      StableRateDisabledOnReserveEvent.InputTuple,
      StableRateDisabledOnReserveEvent.OutputTuple,
      StableRateDisabledOnReserveEvent.OutputObject
    >;
    StableRateDisabledOnReserve: TypedContractEvent<
      StableRateDisabledOnReserveEvent.InputTuple,
      StableRateDisabledOnReserveEvent.OutputTuple,
      StableRateDisabledOnReserveEvent.OutputObject
    >;

    "StableRateEnabledOnReserve(address)": TypedContractEvent<
      StableRateEnabledOnReserveEvent.InputTuple,
      StableRateEnabledOnReserveEvent.OutputTuple,
      StableRateEnabledOnReserveEvent.OutputObject
    >;
    StableRateEnabledOnReserve: TypedContractEvent<
      StableRateEnabledOnReserveEvent.InputTuple,
      StableRateEnabledOnReserveEvent.OutputTuple,
      StableRateEnabledOnReserveEvent.OutputObject
    >;

    "VariableDebtTokenUpgraded(address,address,address)": TypedContractEvent<
      VariableDebtTokenUpgradedEvent.InputTuple,
      VariableDebtTokenUpgradedEvent.OutputTuple,
      VariableDebtTokenUpgradedEvent.OutputObject
    >;
    VariableDebtTokenUpgraded: TypedContractEvent<
      VariableDebtTokenUpgradedEvent.InputTuple,
      VariableDebtTokenUpgradedEvent.OutputTuple,
      VariableDebtTokenUpgradedEvent.OutputObject
    >;
  };
}
